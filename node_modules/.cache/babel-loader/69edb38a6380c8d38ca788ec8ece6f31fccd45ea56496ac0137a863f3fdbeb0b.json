{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Polymorph\\\\Desktop\\\\face_recognizer\\\\face_recognition_app\\\\SmartBrains\\\\src\\\\App.js\";\nimport './App.css';\nimport React from 'react';\nimport Logo from './componenets/Logo/Logo';\nimport Navigation from './componenets/navigation/Navigation';\nimport FaceRecognition from './componenets/FaceRecognition/FaceRecognition';\nimport ImageLinkForm from './componenets/ImageLinkForm/ImageLinkForm';\nimport Rank from './componenets/Rank/Rank';\nimport Particle from './componenets/ParticleComponent/ParticleComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clarifySteup = imageUrl => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentification\n  const PAT = '651d5bf1f1eb4078964573effae6a1a0';\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = '1rajveer1';\n  const APP_ID = '1rajveer1';\n  // Change these to whatever model and image URL you want to use\n  const MODEL_ID = 'face-detection';\n  const IMAGE_URL = imageUrl;\n  const IMAGE_URL1 = 'https://upload.wikimedia.org/wikipedia/commons/e/e7/Tom_Hanks_at_the_Elvis_Premiere_2022.jpg';\n\n  // console.log(IMAGE_URL)\n  ///////////////////////////////////////////////////////////////////////////////////\n  // YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n  ///////////////////////////////////////////////////////////////////////////////////\n\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL1\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.calculateFaceLocation = data => {\n      // const clarifyFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      // const image = document.getElementById('inputimage')\n      // const width = Number(image.width)\n      // const height = Number(image.height)\n      // console.log(width, height)\n      console.log('yuh', data);\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSumbit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      console.log(this.setState);\n      console.log('click');\n      fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", clarifySteup(this.state.imput)).then(response => response.json()).then(response => this.calculateFaceLocation(response)).catch(err => console.log(err));\n    };\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n  // onButtonSubmit = () => {\n  //   this.setState({imageUrl: this.state.input})\n  //   App.models\n  //     .predict(\n  //       Clarifai.FACE_DETECT_MODEL,\n  //       this.state.input)\n  //     .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n  //     .catch(err => console.log(err));\n  // }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSumbit: this.onButtonSumbit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Logo","Navigation","FaceRecognition","ImageLinkForm","Rank","Particle","jsxDEV","_jsxDEV","clarifySteup","imageUrl","PAT","USER_ID","APP_ID","MODEL_ID","IMAGE_URL","IMAGE_URL1","raw","JSON","stringify","requestOptions","method","headers","body","App","Component","constructor","calculateFaceLocation","data","console","log","onInputChange","event","setState","input","target","value","onButtonSumbit","state","fetch","imput","then","response","json","catch","err","box","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/src/App.js"],"sourcesContent":["import './App.css';\nimport React from 'react';\nimport Logo from './componenets/Logo/Logo';\nimport Navigation from './componenets/navigation/Navigation';\nimport FaceRecognition from './componenets/FaceRecognition/FaceRecognition';\nimport ImageLinkForm from './componenets/ImageLinkForm/ImageLinkForm';\nimport Rank from './componenets/Rank/Rank';\nimport Particle from './componenets/ParticleComponent/ParticleComponent';\n\n\nconst clarifySteup = (imageUrl) =>{\n      // Your PAT (Personal Access Token) can be found in the portal under Authentification\n      const PAT = '651d5bf1f1eb4078964573effae6a1a0';\n      // Specify the correct user_id/app_id pairings\n      // Since you're making inferences outside your app's scope\n      const USER_ID = '1rajveer1';       \n      const APP_ID = '1rajveer1';\n      // Change these to whatever model and image URL you want to use\n      const MODEL_ID = 'face-detection';\n      const IMAGE_URL = imageUrl;\n      const IMAGE_URL1 = 'https://upload.wikimedia.org/wikipedia/commons/e/e7/Tom_Hanks_at_the_Elvis_Premiere_2022.jpg'\n\n      // console.log(IMAGE_URL)\n      ///////////////////////////////////////////////////////////////////////////////////\n      // YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n      ///////////////////////////////////////////////////////////////////////////////////\n  \n      const raw = JSON.stringify({\n          \"user_app_id\": {\n              \"user_id\": USER_ID,\n              \"app_id\": APP_ID\n          },\n          \"inputs\": [\n              {\n                  \"data\": {\n                      \"image\": {\n                          \"url\": IMAGE_URL1\n                      }\n                  }\n              }\n          ]\n      });\n  \n      const requestOptions = {\n          method: 'POST',\n          headers: {\n              'Accept': 'application/json',\n              'Authorization': 'Key ' + PAT\n          },\n          body: raw\n      };\n    return requestOptions;\n}\n\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n    }\n  };\n\n  calculateFaceLocation = (data) =>{\n    // const clarifyFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    // const image = document.getElementById('inputimage')\n    // const width = Number(image.width)\n    // const height = Number(image.height)\n    // console.log(width, height)\n    console.log('yuh', data)\n  }\n  onInputChange = (event) =>{\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSumbit = () => {\n    this.setState({imageUrl: this.state.input})\n    console.log(this.setState)\n    console.log('click');\n    fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", clarifySteup(this.state.imput))\n    .then(response => response.json())\n    .then(response => this.calculateFaceLocation(response))\n    .catch(err => console.log(err));\n  }\n  // onButtonSubmit = () => {\n  //   this.setState({imageUrl: this.state.input})\n  //   App.models\n  //     .predict(\n  //       Clarifai.FACE_DETECT_MODEL,\n  //       this.state.input)\n  //     .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n  //     .catch(err => console.log(err));\n  // }\n\n  render (){\n  return (\n    <div className=\"App\">\n      <Particle />\n      <Navigation />\n      <Logo />\n      <Rank />\n      <ImageLinkForm onInputChange = {this.onInputChange} onButtonSumbit = {this.onButtonSumbit}/>\n      {<FaceRecognition imageUrl={this.state.imageUrl} /> }\n    </div>\n  );\n}\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}