{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Polymorph\\\\Desktop\\\\face_recognizer\\\\face_recognition_app\\\\SmartBrains\\\\src\\\\App.js\";\nimport './App.css';\nimport React from 'react';\nimport Logo from './componenets/Logo/Logo';\nimport Navigation from './componenets/navigation/Navigation';\nimport FaceRecognition from './componenets/FaceRecognition/FaceRecognition';\nimport ImageLinkForm from './componenets/ImageLinkForm/ImageLinkForm';\nimport Rank from './componenets/Rank/Rank';\nimport Particle from './componenets/ParticleComponent/ParticleComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clarifySteup = imageUrl => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentification\n  const PAT = '651d5bf1f1eb4078964573effae6a1a0';\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = '1rajveer1';\n  const APP_ID = 'Face Detector';\n  // Change these to whatever model and image URL you want to use\n  const MODEL_ID = 'face-detection';\n  const IMAGE_URL = imageUrl;\n\n  ///////////////////////////////////////////////////////////////////////////////////\n  // YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n  ///////////////////////////////////////////////////////////////////////////////////\n\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n    this.onButtonSumbit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      console.log('click');\n      fetch(\"https://api.clarifai.com/v2/models/\" + \"face-detection\" + \"/outputs\", clarifySteup(this.state.imput)).then(response => response.json()).then(response => this.calculateFaceLocation(response)).catch(err => console.log(err));\n    };\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSumbit: this.onButtonSumbit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Logo","Navigation","FaceRecognition","ImageLinkForm","Rank","Particle","jsxDEV","_jsxDEV","clarifySteup","imageUrl","PAT","USER_ID","APP_ID","MODEL_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","App","Component","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","onButtonSumbit","setState","state","input","console","log","fetch","imput","then","response","json","catch","err","box","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onInputChange"],"sources":["C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/src/App.js"],"sourcesContent":["import './App.css';\nimport React from 'react';\nimport Logo from './componenets/Logo/Logo';\nimport Navigation from './componenets/navigation/Navigation';\nimport FaceRecognition from './componenets/FaceRecognition/FaceRecognition';\nimport ImageLinkForm from './componenets/ImageLinkForm/ImageLinkForm';\nimport Rank from './componenets/Rank/Rank';\nimport Particle from './componenets/ParticleComponent/ParticleComponent';\n\n\nconst clarifySteup = (imageUrl) =>{\n      // Your PAT (Personal Access Token) can be found in the portal under Authentification\n      const PAT = '651d5bf1f1eb4078964573effae6a1a0';\n      // Specify the correct user_id/app_id pairings\n      // Since you're making inferences outside your app's scope\n      const USER_ID = '1rajveer1';       \n      const APP_ID = 'Face Detector';\n      // Change these to whatever model and image URL you want to use\n      const MODEL_ID = 'face-detection';\n      const IMAGE_URL = imageUrl;\n  \n      ///////////////////////////////////////////////////////////////////////////////////\n      // YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n      ///////////////////////////////////////////////////////////////////////////////////\n  \n      const raw = JSON.stringify({\n          \"user_app_id\": {\n              \"user_id\": USER_ID,\n              \"app_id\": APP_ID\n          },\n          \"inputs\": [\n              {\n                  \"data\": {\n                      \"image\": {\n                          \"url\": IMAGE_URL\n                      }\n                  }\n              }\n          ]\n      });\n  \n      const requestOptions = {\n          method: 'POST',\n          headers: {\n              'Accept': 'application/json',\n              'Authorization': 'Key ' + PAT\n          },\n          body: raw\n      };\n    return requestOptions; \n}\n\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n    }\n  };\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace= data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  } \n\n  onButtonSumbit = () => {\n    this.setState({imageUrl: this.state.input})\n    console.log('click');\n    fetch(\"https://api.clarifai.com/v2/models/\" + \"face-detection\" + \"/outputs\", clarifySteup(this.state.imput))\n    .then(response => response.json())\n    .then(response => this.calculateFaceLocation(response))\n    .catch(err => console.log(err));\n  }\n\n  render (){\n  return (\n    <div className=\"App\">\n      <Particle />\n      <Navigation />\n      <Logo />\n      <Rank />\n      <ImageLinkForm onInputChange = {this.onInputChange} onButtonSumbit = {this.onButtonSumbit}/>\n      {<FaceRecognition imageUrl={this.state.imageUrl} /> }\n    </div>\n  );\n}\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}