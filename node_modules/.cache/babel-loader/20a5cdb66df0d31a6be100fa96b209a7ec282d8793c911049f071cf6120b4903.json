{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { getStyleFromHsl } from \"tsparticles-engine\";\nvar currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n  var svgData = imageShape.svgData;\n  if (!svgData) {\n    return \"\";\n  }\n  var colorStyle = getStyleFromHsl(color, opacity);\n  if (svgData.includes(\"fill\")) {\n    return svgData.replace(currentColorRegex, function () {\n      return colorStyle;\n    });\n  }\n  var preFillIndex = svgData.indexOf(\">\");\n  return \"\".concat(svgData.substring(0, preFillIndex), \" fill=\\\"\").concat(colorStyle, \"\\\"\").concat(svgData.substring(preFillIndex));\n}\nexport function loadImage(_x) {\n  return _loadImage.apply(this, arguments);\n}\nfunction _loadImage() {\n  _loadImage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(image) {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", new Promise(function (resolve) {\n            image.loading = true;\n            var img = new Image();\n            image.element = img;\n            img.addEventListener(\"load\", function () {\n              image.loading = false;\n              resolve();\n            });\n            img.addEventListener(\"error\", function () {\n              image.element = undefined;\n              image.error = true;\n              image.loading = false;\n              console.error(\"Error tsParticles - loading image: \".concat(image.source));\n              resolve();\n            });\n            img.src = image.source;\n          }));\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _loadImage.apply(this, arguments);\n}\nexport function downloadSvgImage(_x2) {\n  return _downloadSvgImage.apply(this, arguments);\n}\nfunction _downloadSvgImage() {\n  _downloadSvgImage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(image) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          if (!(image.type !== \"svg\")) {\n            _context3.next = 4;\n            break;\n          }\n          _context3.next = 3;\n          return loadImage(image);\n        case 3:\n          return _context3.abrupt(\"return\");\n        case 4:\n          image.loading = true;\n          _context3.next = 7;\n          return fetch(image.source);\n        case 7:\n          response = _context3.sent;\n          if (!response.ok) {\n            console.error(\"Error tsParticles - Image not found\");\n            image.error = true;\n          }\n          if (image.error) {\n            _context3.next = 13;\n            break;\n          }\n          _context3.next = 12;\n          return response.text();\n        case 12:\n          image.svgData = _context3.sent;\n        case 13:\n          image.loading = false;\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _downloadSvgImage.apply(this, arguments);\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n  var _a, _b, _c;\n  var svgColoredData = replaceColorSvg(image, color, (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1),\n    imageRes = {\n      color: color,\n      data: Object.assign(Object.assign({}, image), {\n        svgData: svgColoredData\n      }),\n      loaded: false,\n      ratio: imageData.width / imageData.height,\n      replaceColor: (_c = imageData.replaceColor) !== null && _c !== void 0 ? _c : imageData.replace_color,\n      source: imageData.src\n    };\n  return new Promise(function (resolve) {\n    var svg = new Blob([svgColoredData], {\n        type: \"image/svg+xml\"\n      }),\n      domUrl = URL || window.URL || window.webkitURL || window,\n      url = domUrl.createObjectURL(svg),\n      img = new Image();\n    img.addEventListener(\"load\", function () {\n      imageRes.loaded = true;\n      imageRes.element = img;\n      resolve(imageRes);\n      domUrl.revokeObjectURL(url);\n    });\n    img.addEventListener(\"error\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var img2;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            domUrl.revokeObjectURL(url);\n            img2 = Object.assign(Object.assign({}, image), {\n              error: false,\n              loading: true\n            });\n            _context.next = 4;\n            return loadImage(img2);\n          case 4:\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    })));\n    img.src = url;\n  });\n}","map":{"version":3,"names":["getStyleFromHsl","currentColorRegex","replaceColorSvg","imageShape","color","opacity","svgData","colorStyle","includes","replace","preFillIndex","indexOf","concat","substring","loadImage","_x","_loadImage","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","image","wrap","_callee2$","_context2","prev","next","abrupt","Promise","resolve","loading","img","Image","element","addEventListener","undefined","error","console","source","src","stop","downloadSvgImage","_x2","_downloadSvgImage","_callee3","response","_callee3$","_context3","type","fetch","sent","ok","text","replaceImageColor","imageData","particle","_a","_b","_c","svgColoredData","value","imageRes","data","Object","assign","loaded","ratio","width","height","replaceColor","replace_color","svg","Blob","domUrl","URL","window","webkitURL","url","createObjectURL","revokeObjectURL","_callee","img2","_callee$","_context"],"sources":["C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/tsparticles-shape-image/esm/Utils.js"],"sourcesContent":["import { getStyleFromHsl } from \"tsparticles-engine\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            console.error(`Error tsParticles - loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        console.error(\"Error tsParticles - Image not found\");\n        image.error = true;\n    }\n    if (!image.error) {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    var _a, _b, _c;\n    const svgColoredData = replaceColorSvg(image, color, (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1), imageRes = {\n        color,\n        data: Object.assign(Object.assign({}, image), { svgData: svgColoredData }),\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: (_c = imageData.replaceColor) !== null && _c !== void 0 ? _c : imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = Object.assign(Object.assign({}, image), { error: false, loading: true });\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}