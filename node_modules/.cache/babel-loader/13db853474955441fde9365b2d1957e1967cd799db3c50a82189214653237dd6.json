{"ast":null,"code":"import _classCallCheck from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Tilt } from \"./Options/Classes/Tilt\";\nfunction updateTilt(particle, delta) {\n  var _a, _b;\n  if (!particle.tilt || !particle.options.tilt) {\n    return;\n  }\n  var tilt = particle.options.tilt,\n    tiltAnimation = tilt.animation,\n    speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor,\n    max = 2 * Math.PI,\n    decay = (_b = particle.tilt.decay) !== null && _b !== void 0 ? _b : 1;\n  if (!tiltAnimation.enable) {\n    return;\n  }\n  switch (particle.tilt.status) {\n    case \"increasing\":\n      particle.tilt.value += speed;\n      if (particle.tilt.value > max) {\n        particle.tilt.value -= max;\n      }\n      break;\n    case \"decreasing\":\n    default:\n      particle.tilt.value -= speed;\n      if (particle.tilt.value < 0) {\n        particle.tilt.value += max;\n      }\n      break;\n  }\n  if (particle.tilt.velocity && decay !== 1) {\n    particle.tilt.velocity *= decay;\n  }\n}\nexport var TiltUpdater = /*#__PURE__*/function () {\n  function TiltUpdater(container) {\n    _classCallCheck(this, TiltUpdater);\n    this.container = container;\n  }\n  _createClass(TiltUpdater, [{\n    key: \"getTransformValues\",\n    value: function getTransformValues(particle) {\n      var _a;\n      var tilt = ((_a = particle.tilt) === null || _a === void 0 ? void 0 : _a.enable) && particle.tilt;\n      return {\n        b: tilt ? Math.cos(tilt.value) * tilt.cosDirection : undefined,\n        c: tilt ? Math.sin(tilt.value) * tilt.sinDirection : undefined\n      };\n    }\n  }, {\n    key: \"init\",\n    value: function init(particle) {\n      var _a;\n      var tiltOptions = particle.options.tilt;\n      if (!tiltOptions) {\n        return;\n      }\n      particle.tilt = {\n        enable: tiltOptions.enable,\n        value: getRangeValue(tiltOptions.value) * Math.PI / 180,\n        sinDirection: getRandom() >= 0.5 ? 1 : -1,\n        cosDirection: getRandom() >= 0.5 ? 1 : -1\n      };\n      var tiltDirection = tiltOptions.direction;\n      if (tiltDirection === \"random\") {\n        var index = Math.floor(getRandom() * 2);\n        tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n      }\n      switch (tiltDirection) {\n        case \"counter-clockwise\":\n        case \"counterClockwise\":\n          particle.tilt.status = \"decreasing\";\n          break;\n        case \"clockwise\":\n          particle.tilt.status = \"increasing\";\n          break;\n      }\n      var tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n      if (tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable) {\n        particle.tilt.decay = 1 - getRangeValue(tiltAnimation.decay);\n        particle.tilt.velocity = getRangeValue(tiltAnimation.speed) / 360 * this.container.retina.reduceFactor;\n        if (!tiltAnimation.sync) {\n          particle.tilt.velocity *= getRandom();\n        }\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var _a;\n      var tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n      return !particle.destroyed && !particle.spawning && !!(tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable);\n    }\n  }, {\n    key: \"loadOptions\",\n    value: function loadOptions(options) {\n      if (!options.tilt) {\n        options.tilt = new Tilt();\n      }\n      for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        sources[_key - 1] = arguments[_key];\n      }\n      for (var _i = 0, _sources = sources; _i < _sources.length; _i++) {\n        var source = _sources[_i];\n        options.tilt.load(source === null || source === void 0 ? void 0 : source.tilt);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n      updateTilt(particle, delta);\n    }\n  }]);\n  return TiltUpdater;\n}();","map":{"version":3,"names":["getRandom","getRangeValue","Tilt","updateTilt","particle","delta","_a","_b","tilt","options","tiltAnimation","animation","speed","velocity","factor","max","Math","PI","decay","enable","status","value","TiltUpdater","container","_classCallCheck","_createClass","key","getTransformValues","b","cos","cosDirection","undefined","c","sin","sinDirection","init","tiltOptions","tiltDirection","direction","index","floor","retina","reduceFactor","sync","isEnabled","destroyed","spawning","loadOptions","_len","arguments","length","sources","Array","_key","_i","_sources","source","load","update"],"sources":["C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/tsparticles-updater-tilt/esm/TiltUpdater.js"],"sourcesContent":["import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Tilt } from \"./Options/Classes/Tilt\";\nfunction updateTilt(particle, delta) {\n    var _a, _b;\n    if (!particle.tilt || !particle.options.tilt) {\n        return;\n    }\n    const tilt = particle.options.tilt, tiltAnimation = tilt.animation, speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, max = 2 * Math.PI, decay = (_b = particle.tilt.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!tiltAnimation.enable) {\n        return;\n    }\n    switch (particle.tilt.status) {\n        case \"increasing\":\n            particle.tilt.value += speed;\n            if (particle.tilt.value > max) {\n                particle.tilt.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            particle.tilt.value -= speed;\n            if (particle.tilt.value < 0) {\n                particle.tilt.value += max;\n            }\n            break;\n    }\n    if (particle.tilt.velocity && decay !== 1) {\n        particle.tilt.velocity *= decay;\n    }\n}\nexport class TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    getTransformValues(particle) {\n        var _a;\n        const tilt = ((_a = particle.tilt) === null || _a === void 0 ? void 0 : _a.enable) && particle.tilt;\n        return {\n            b: tilt ? Math.cos(tilt.value) * tilt.cosDirection : undefined,\n            c: tilt ? Math.sin(tilt.value) * tilt.sinDirection : undefined,\n        };\n    }\n    init(particle) {\n        var _a;\n        const tiltOptions = particle.options.tilt;\n        if (!tiltOptions) {\n            return;\n        }\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: (getRangeValue(tiltOptions.value) * Math.PI) / 180,\n            sinDirection: getRandom() >= 0.5 ? 1 : -1,\n            cosDirection: getRandom() >= 0.5 ? 1 : -1,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (tiltDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.tilt.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.tilt.status = \"increasing\";\n                break;\n        }\n        const tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n        if (tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable) {\n            particle.tilt.decay = 1 - getRangeValue(tiltAnimation.decay);\n            particle.tilt.velocity = (getRangeValue(tiltAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n        return !particle.destroyed && !particle.spawning && !!(tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.tilt) {\n            options.tilt = new Tilt();\n        }\n        for (const source of sources) {\n            options.tilt.load(source === null || source === void 0 ? void 0 : source.tilt);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateTilt(particle, delta);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}