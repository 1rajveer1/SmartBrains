{"ast":null,"code":"// import { useCallback } from \"react\";\n// import { loadFull } from \"tsparticles\";\n// import Particles from \"react-tsparticles\";\n\n// const Particle = () => {\n//     const particlesInit = useCallback(async engine => {\n//         console.log(engine);\n//         // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n//         // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n//         // starting from v2 you can add only the features you need reducing the bundle size\n//         await loadFull(engine);\n//     }, []);\n\n//     const particlesLoaded = useCallback(async container => {\n//         await console.log(container);\n//     }, []);\n//     return (\n//         <Particles\n//             id=\"tsparticles\"\n//             init={particlesInit}\n//             loaded={particlesLoaded}\n//             options={{\n//                 fpsLimit: 60,\n//                 interactivity: {\n//                     events: {\n//                         onClick: {\n//                             enable: true,\n//                             mode: \"push\",\n//                         },\n//                         onHover: {\n//                             enable: true,\n//                             mode: \"repulse\",\n//                         },\n//                         resize: true,\n//                     },\n//                     modes: {\n//                         push: {\n//                             quantity: 4,\n//                         },\n//                         repulse: {\n//                             distance: 200,\n//                             duration: 0.4,\n//                         },\n//                     },\n//                 },\n//                 particles: {\n//                     color: {\n//                         value: \"#ffffff\",\n//                     },\n//                     links: {\n//                         color: \"#ffffff\",\n//                         distance: 150,\n//                         enable: true,\n//                         opacity: 0.5,\n//                         width: 1,\n//                     },\n//                     collisions: {\n//                         enable: true,\n//                     },\n//                     move: {\n//                         directions: \"none\",\n//                         enable: true,\n//                         outModes: {\n//                             default: \"bounce\",\n//                         },\n//                         random: false,\n//                         speed: 3,\n//                         straight: false,\n//                     },\n//                     number: {\n//                         density: {\n//                             enable: true,\n//                             area: 800,\n//                         },\n//                         value: 50,\n//                     },\n//                     opacity: {\n//                         value: 0.5,\n//                     },\n//                     shape: {\n//                         type: \"circle\",\n//                     },\n//                     size: {\n//                         value: { min: 1, max: 5 },\n//                     },\n//                 },\n//                 detectRetina: true,\n//             }}\n//         />\n//     );\n// }\n// export default Particle;","map":{"version":3,"names":[],"sources":["C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/src/componenets/ParticleComponent/ParticleComponent.js"],"sourcesContent":["// import { useCallback } from \"react\";\r\n// import { loadFull } from \"tsparticles\";\r\n// import Particles from \"react-tsparticles\";\r\n\r\n// const Particle = () => {\r\n//     const particlesInit = useCallback(async engine => {\r\n//         console.log(engine);\r\n//         // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\r\n//         // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\r\n//         // starting from v2 you can add only the features you need reducing the bundle size\r\n//         await loadFull(engine);\r\n//     }, []);\r\n\r\n//     const particlesLoaded = useCallback(async container => {\r\n//         await console.log(container);\r\n//     }, []);\r\n//     return (\r\n//         <Particles\r\n//             id=\"tsparticles\"\r\n//             init={particlesInit}\r\n//             loaded={particlesLoaded}\r\n//             options={{\r\n//                 fpsLimit: 60,\r\n//                 interactivity: {\r\n//                     events: {\r\n//                         onClick: {\r\n//                             enable: true,\r\n//                             mode: \"push\",\r\n//                         },\r\n//                         onHover: {\r\n//                             enable: true,\r\n//                             mode: \"repulse\",\r\n//                         },\r\n//                         resize: true,\r\n//                     },\r\n//                     modes: {\r\n//                         push: {\r\n//                             quantity: 4,\r\n//                         },\r\n//                         repulse: {\r\n//                             distance: 200,\r\n//                             duration: 0.4,\r\n//                         },\r\n//                     },\r\n//                 },\r\n//                 particles: {\r\n//                     color: {\r\n//                         value: \"#ffffff\",\r\n//                     },\r\n//                     links: {\r\n//                         color: \"#ffffff\",\r\n//                         distance: 150,\r\n//                         enable: true,\r\n//                         opacity: 0.5,\r\n//                         width: 1,\r\n//                     },\r\n//                     collisions: {\r\n//                         enable: true,\r\n//                     },\r\n//                     move: {\r\n//                         directions: \"none\",\r\n//                         enable: true,\r\n//                         outModes: {\r\n//                             default: \"bounce\",\r\n//                         },\r\n//                         random: false,\r\n//                         speed: 3,\r\n//                         straight: false,\r\n//                     },\r\n//                     number: {\r\n//                         density: {\r\n//                             enable: true,\r\n//                             area: 800,\r\n//                         },\r\n//                         value: 50,\r\n//                     },\r\n//                     opacity: {\r\n//                         value: 0.5,\r\n//                     },\r\n//                     shape: {\r\n//                         type: \"circle\",\r\n//                     },\r\n//                     size: {\r\n//                         value: { min: 1, max: 5 },\r\n//                     },\r\n//                 },\r\n//                 detectRetina: true,\r\n//             }}\r\n//         />\r\n//     );\r\n// }\r\n// export default Particle;"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}