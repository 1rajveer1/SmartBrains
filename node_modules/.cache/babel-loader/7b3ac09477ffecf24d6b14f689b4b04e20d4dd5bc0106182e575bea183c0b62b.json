{"ast":null,"code":"import _classCallCheck from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nexport var Vector3d = /*#__PURE__*/function () {\n  function Vector3d(xOrCoords, y, z) {\n    _classCallCheck(this, Vector3d);\n    if (typeof xOrCoords !== \"number\" && xOrCoords) {\n      this.x = xOrCoords.x;\n      this.y = xOrCoords.y;\n      var coords3d = xOrCoords;\n      this.z = coords3d.z ? coords3d.z : 0;\n    } else if (xOrCoords !== undefined && y !== undefined) {\n      this.x = xOrCoords;\n      this.y = y;\n      this.z = z !== null && z !== void 0 ? z : 0;\n    } else {\n      throw new Error(\"tsParticles - Vector3d not initialized correctly\");\n    }\n  }\n  _createClass(Vector3d, [{\n    key: \"angle\",\n    get: function get() {\n      return Math.atan2(this.y, this.x);\n    },\n    set: function set(angle) {\n      this.updateFromAngle(angle, this.length);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return Math.sqrt(this.getLengthSq());\n    },\n    set: function set(length) {\n      this.updateFromAngle(this.angle, length);\n    }\n  }, {\n    key: \"add\",\n    value: function add(v) {\n      return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n  }, {\n    key: \"addTo\",\n    value: function addTo(v) {\n      this.x += v.x;\n      this.y += v.y;\n      this.z += v.z;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      return Vector3d.clone(this);\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(v) {\n      return this.sub(v).length;\n    }\n  }, {\n    key: \"distanceToSq\",\n    value: function distanceToSq(v) {\n      return this.sub(v).getLengthSq();\n    }\n  }, {\n    key: \"div\",\n    value: function div(n) {\n      return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n  }, {\n    key: \"divTo\",\n    value: function divTo(n) {\n      this.x /= n;\n      this.y /= n;\n      this.z /= n;\n    }\n  }, {\n    key: \"getLengthSq\",\n    value: function getLengthSq() {\n      return Math.pow(this.x, 2) + Math.pow(this.y, 2);\n    }\n  }, {\n    key: \"mult\",\n    value: function mult(n) {\n      return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n  }, {\n    key: \"multTo\",\n    value: function multTo(n) {\n      this.x *= n;\n      this.y *= n;\n      this.z *= n;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(angle) {\n      return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n  }, {\n    key: \"setTo\",\n    value: function setTo(c) {\n      this.x = c.x;\n      this.y = c.y;\n      var v3d = c;\n      this.z = v3d.z ? v3d.z : 0;\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(v) {\n      return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n  }, {\n    key: \"subFrom\",\n    value: function subFrom(v) {\n      this.x -= v.x;\n      this.y -= v.y;\n      this.z -= v.z;\n    }\n  }, {\n    key: \"updateFromAngle\",\n    value: function updateFromAngle(angle, length) {\n      this.x = Math.cos(angle) * length;\n      this.y = Math.sin(angle) * length;\n    }\n  }], [{\n    key: \"origin\",\n    get: function get() {\n      return Vector3d.create(0, 0, 0);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(source) {\n      return Vector3d.create(source.x, source.y, source.z);\n    }\n  }, {\n    key: \"create\",\n    value: function create(x, y, z) {\n      return new Vector3d(x, y, z);\n    }\n  }]);\n  return Vector3d;\n}();","map":{"version":3,"names":["Vector3d","xOrCoords","y","z","_classCallCheck","x","coords3d","undefined","Error","_createClass","key","get","Math","atan2","set","angle","updateFromAngle","length","sqrt","getLengthSq","value","add","v","create","addTo","copy","clone","distanceTo","sub","distanceToSq","div","n","divTo","pow","mult","multTo","rotate","cos","sin","setTo","c","v3d","subFrom","source"],"sources":["C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js"],"sourcesContent":["export class Vector3d {\n    constructor(xOrCoords, y, z) {\n        if (typeof xOrCoords !== \"number\" && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z !== null && z !== void 0 ? z : 0;\n        }\n        else {\n            throw new Error(\"tsParticles - Vector3d not initialized correctly\");\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this.updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this.updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n    updateFromAngle(angle, length) {\n        this.x = Math.cos(angle) * length;\n        this.y = Math.sin(angle) * length;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}