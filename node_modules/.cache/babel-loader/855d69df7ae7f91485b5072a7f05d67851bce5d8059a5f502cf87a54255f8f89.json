{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { clear as _clear, drawParticle as _drawParticle, drawParticlePlugin as _drawParticlePlugin, drawPlugin as _drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, isSsr } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n  var _a;\n  var newValue = newFactor[key];\n  if (newValue !== undefined) {\n    factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n  }\n}\nexport var Canvas = /*#__PURE__*/function () {\n  function Canvas(container) {\n    var _this = this;\n    _classCallCheck(this, Canvas);\n    this.container = container;\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this._context = null;\n    this._generated = false;\n    this._preDrawUpdaters = [];\n    this._postDrawUpdaters = [];\n    this._resizePlugins = [];\n    this._colorPlugins = [];\n    this._mutationObserver = !isSsr() && typeof MutationObserver !== \"undefined\" ? new MutationObserver(function (records) {\n      var _iterator = _createForOfIteratorHelper(records),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var record = _step.value;\n          if (record.type === \"attributes\" && record.attributeName === \"style\") {\n            _this._repairStyle();\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }) : undefined;\n  }\n  _createClass(Canvas, [{\n    key: \"_fullScreen\",\n    get: function get() {\n      return this.container.actualOptions.fullScreen.enable;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this2 = this;\n      var options = this.container.actualOptions,\n        trail = options.particles.move.trail,\n        trailFill = this._trailFill;\n      if (options.backgroundMask.enable) {\n        this.paint();\n      } else if (trail.enable && trail.length > 0 && trailFill) {\n        if (trailFill.color) {\n          this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n        } else if (trailFill.image) {\n          this._paintImage(trailFill.image, trailFill.opacity);\n        }\n      } else {\n        this.draw(function (ctx) {\n          _clear(ctx, _this2.size);\n        });\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _a, _b;\n      (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n      if (this._generated) {\n        (_b = this.element) === null || _b === void 0 ? void 0 : _b.remove();\n      } else {\n        this._resetOriginalStyle();\n      }\n      this.stop();\n      this._preDrawUpdaters = [];\n      this._postDrawUpdaters = [];\n      this._resizePlugins = [];\n      this._colorPlugins = [];\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(cb) {\n      if (!this._context) {\n        return;\n      }\n      return cb(this._context);\n    }\n  }, {\n    key: \"drawParticle\",\n    value: function drawParticle(particle, delta) {\n      var _this3 = this;\n      var _a;\n      if (particle.spawning || particle.destroyed) {\n        return;\n      }\n      var radius = particle.getRadius();\n      if (radius <= 0) {\n        return;\n      }\n      var pfColor = particle.getFillColor(),\n        psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n      var _this$_getPluginParti = this._getPluginParticleColors(particle),\n        _this$_getPluginParti2 = _slicedToArray(_this$_getPluginParti, 2),\n        fColor = _this$_getPluginParti2[0],\n        sColor = _this$_getPluginParti2[1];\n      if (!fColor) {\n        fColor = pfColor;\n      }\n      if (!sColor) {\n        sColor = psColor;\n      }\n      if (!fColor && !sColor) {\n        return;\n      }\n      this.draw(function (ctx) {\n        var _a, _b, _c, _d;\n        var options = _this3.container.actualOptions,\n          zIndexOptions = particle.options.zIndex,\n          zOpacityFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.opacityRate),\n          opacity = (_c = (_a = particle.bubble.opacity) !== null && _a !== void 0 ? _a : (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1,\n          strokeOpacity = (_d = particle.strokeOpacity) !== null && _d !== void 0 ? _d : opacity,\n          zOpacity = opacity * zOpacityFactor,\n          zStrokeOpacity = strokeOpacity * zOpacityFactor,\n          transform = {},\n          colorStyles = {\n            fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined\n          };\n        colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n        _this3._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n        _drawParticle({\n          container: _this3.container,\n          context: ctx,\n          particle: particle,\n          delta: delta,\n          colorStyles: colorStyles,\n          backgroundMask: options.backgroundMask.enable,\n          composite: options.backgroundMask.composite,\n          radius: radius * Math.pow(1 - particle.zIndexFactor, zIndexOptions.sizeRate),\n          opacity: zOpacity,\n          shadow: particle.options.shadow,\n          transform: transform\n        });\n        _this3._applyPostDrawUpdaters(particle);\n      });\n    }\n  }, {\n    key: \"drawParticlePlugin\",\n    value: function drawParticlePlugin(plugin, particle, delta) {\n      this.draw(function (ctx) {\n        _drawParticlePlugin(ctx, plugin, particle, delta);\n      });\n    }\n  }, {\n    key: \"drawPlugin\",\n    value: function drawPlugin(plugin, delta) {\n      this.draw(function (ctx) {\n        _drawPlugin(ctx, plugin, delta);\n      });\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _a;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.resize();\n              this._initStyle();\n              this._initCover();\n              _context.prev = 3;\n              _context.next = 6;\n              return this._initTrail();\n            case 6:\n              _context.next = 11;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](3);\n              console.error(_context.t0);\n            case 11:\n              this.initBackground();\n              if (this.element) {\n                (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.element, {\n                  attributes: true\n                });\n              }\n              this.initUpdaters();\n              this.initPlugins();\n              this.paint();\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[3, 8]]);\n      }));\n      function init() {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n  }, {\n    key: \"initBackground\",\n    value: function initBackground() {\n      var options = this.container.actualOptions,\n        background = options.background,\n        element = this.element,\n        elementStyle = element === null || element === void 0 ? void 0 : element.style;\n      if (!elementStyle) {\n        return;\n      }\n      if (background.color) {\n        var color = rangeColorToRgb(background.color);\n        elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n      } else {\n        elementStyle.backgroundColor = \"\";\n      }\n      elementStyle.backgroundImage = background.image || \"\";\n      elementStyle.backgroundPosition = background.position || \"\";\n      elementStyle.backgroundRepeat = background.repeat || \"\";\n      elementStyle.backgroundSize = background.size || \"\";\n    }\n  }, {\n    key: \"initPlugins\",\n    value: function initPlugins() {\n      this._resizePlugins = [];\n      var _iterator2 = _createForOfIteratorHelper(this.container.plugins),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _step2$value = _slicedToArray(_step2.value, 2),\n            plugin = _step2$value[1];\n          if (plugin.resize) {\n            this._resizePlugins.push(plugin);\n          }\n          if (plugin.particleFillColor || plugin.particleStrokeColor) {\n            this._colorPlugins.push(plugin);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"initUpdaters\",\n    value: function initUpdaters() {\n      this._preDrawUpdaters = [];\n      this._postDrawUpdaters = [];\n      var _iterator3 = _createForOfIteratorHelper(this.container.particles.updaters),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var updater = _step3.value;\n          if (updater.afterDraw) {\n            this._postDrawUpdaters.push(updater);\n          }\n          if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n            this._preDrawUpdaters.push(updater);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"loadCanvas\",\n    value: function loadCanvas(canvas) {\n      var _a, _b;\n      if (this._generated) {\n        (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n      }\n      this._generated = canvas.dataset && generatedAttribute in canvas.dataset ? canvas.dataset[generatedAttribute] === \"true\" : this._generated;\n      this.element = canvas;\n      this.element.ariaHidden = \"true\";\n      this._originalStyle = deepExtend({}, this.element.style);\n      this.size.height = canvas.offsetHeight;\n      this.size.width = canvas.offsetWidth;\n      this._context = this.element.getContext(\"2d\");\n      (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(this.element, {\n        attributes: true\n      });\n      this.container.retina.init();\n      this.initBackground();\n    }\n  }, {\n    key: \"paint\",\n    value: function paint() {\n      var _this4 = this;\n      var options = this.container.actualOptions;\n      this.draw(function (ctx) {\n        if (options.backgroundMask.enable && options.backgroundMask.cover) {\n          _clear(ctx, _this4.size);\n          _this4._paintBase(_this4._coverColorStyle);\n        } else {\n          _this4._paintBase();\n        }\n      });\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      if (!this.element) {\n        return;\n      }\n      var container = this.container,\n        pxRatio = container.retina.pixelRatio,\n        size = container.canvas.size,\n        newSize = {\n          width: this.element.offsetWidth * pxRatio,\n          height: this.element.offsetHeight * pxRatio\n        };\n      if (newSize.height === size.height && newSize.width === size.width && newSize.height === this.element.height && newSize.width === this.element.width) {\n        return;\n      }\n      var oldSize = Object.assign({}, size);\n      this.element.width = size.width = this.element.offsetWidth * pxRatio;\n      this.element.height = size.height = this.element.offsetHeight * pxRatio;\n      if (this.container.started) {\n        this.resizeFactor = {\n          width: size.width / oldSize.width,\n          height: size.height / oldSize.height\n        };\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      var _this5 = this;\n      this.draw(function (ctx) {\n        _clear(ctx, _this5.size);\n      });\n    }\n  }, {\n    key: \"windowResize\",\n    value: function () {\n      var _windowResize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var container, needsRefresh;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (this.element) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 2:\n              this.resize();\n              container = this.container, needsRefresh = container.updateActualOptions();\n              container.particles.setDensity();\n              this._applyResizePlugins();\n              if (!needsRefresh) {\n                _context2.next = 9;\n                break;\n              }\n              _context2.next = 9;\n              return container.refresh();\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function windowResize() {\n        return _windowResize.apply(this, arguments);\n      }\n      return windowResize;\n    }()\n  }, {\n    key: \"_applyPostDrawUpdaters\",\n    value: function _applyPostDrawUpdaters(particle) {\n      var _a;\n      var _iterator4 = _createForOfIteratorHelper(this._postDrawUpdaters),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var updater = _step4.value;\n          (_a = updater.afterDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"_applyPreDrawUpdaters\",\n    value: function _applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform) {\n      var _a;\n      var _iterator5 = _createForOfIteratorHelper(this._preDrawUpdaters),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var updater = _step5.value;\n          if (updater.getColorStyles) {\n            var _updater$getColorStyl = updater.getColorStyles(particle, ctx, radius, zOpacity),\n              fill = _updater$getColorStyl.fill,\n              stroke = _updater$getColorStyl.stroke;\n            if (fill) {\n              colorStyles.fill = fill;\n            }\n            if (stroke) {\n              colorStyles.stroke = stroke;\n            }\n          }\n          if (updater.getTransformValues) {\n            var updaterTransform = updater.getTransformValues(particle);\n            for (var key in updaterTransform) {\n              setTransformValue(transform, updaterTransform, key);\n            }\n          }\n          (_a = updater.beforeDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  }, {\n    key: \"_applyResizePlugins\",\n    value: function _applyResizePlugins() {\n      var _iterator6 = _createForOfIteratorHelper(this._resizePlugins),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var plugin = _step6.value;\n          if (plugin.resize) {\n            plugin.resize();\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n  }, {\n    key: \"_getPluginParticleColors\",\n    value: function _getPluginParticleColors(particle) {\n      var fColor, sColor;\n      var _iterator7 = _createForOfIteratorHelper(this._colorPlugins),\n        _step7;\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var plugin = _step7.value;\n          if (!fColor && plugin.particleFillColor) {\n            fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n          }\n          if (!sColor && plugin.particleStrokeColor) {\n            sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n          }\n          if (fColor && sColor) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n      return [fColor, sColor];\n    }\n  }, {\n    key: \"_initCover\",\n    value: function _initCover() {\n      var options = this.container.actualOptions,\n        cover = options.backgroundMask.cover,\n        color = cover.color,\n        coverRgb = rangeColorToRgb(color);\n      if (coverRgb) {\n        var coverColor = {\n          r: coverRgb.r,\n          g: coverRgb.g,\n          b: coverRgb.b,\n          a: cover.opacity\n        };\n        this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n      }\n    }\n  }, {\n    key: \"_initStyle\",\n    value: function _initStyle() {\n      var element = this.element,\n        options = this.container.actualOptions;\n      if (!element) {\n        return;\n      }\n      if (this._fullScreen) {\n        this._originalStyle = deepExtend({}, element.style);\n        this._setFullScreenStyle();\n      } else {\n        this._resetOriginalStyle();\n      }\n      for (var key in options.style) {\n        if (!key || !options.style) {\n          continue;\n        }\n        var value = options.style[key];\n        if (!value) {\n          continue;\n        }\n        element.style.setProperty(key, value, \"important\");\n      }\n    }\n  }, {\n    key: \"_initTrail\",\n    value: function () {\n      var _initTrail2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _this6 = this;\n        var options, trail, trailFill, fillColor, _trail;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n              if (trail.enable) {\n                _context3.next = 3;\n                break;\n              }\n              return _context3.abrupt(\"return\");\n            case 3:\n              if (!trailFill.color) {\n                _context3.next = 11;\n                break;\n              }\n              fillColor = rangeColorToRgb(trailFill.color);\n              if (fillColor) {\n                _context3.next = 7;\n                break;\n              }\n              return _context3.abrupt(\"return\");\n            case 7:\n              _trail = options.particles.move.trail;\n              this._trailFill = {\n                color: Object.assign({}, fillColor),\n                opacity: 1 / _trail.length\n              };\n              _context3.next = 13;\n              break;\n            case 11:\n              _context3.next = 13;\n              return new Promise(function (resolve, reject) {\n                if (!trailFill.image) {\n                  return;\n                }\n                var img = document.createElement(\"img\");\n                img.addEventListener(\"load\", function () {\n                  _this6._trailFill = {\n                    image: img,\n                    opacity: 1 / trail.length\n                  };\n                  resolve();\n                });\n                img.addEventListener(\"error\", function (evt) {\n                  reject(evt.error);\n                });\n                img.src = trailFill.image;\n              });\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function _initTrail() {\n        return _initTrail2.apply(this, arguments);\n      }\n      return _initTrail;\n    }()\n  }, {\n    key: \"_paintBase\",\n    value: function _paintBase(baseColor) {\n      var _this7 = this;\n      this.draw(function (ctx) {\n        paintBase(ctx, _this7.size, baseColor);\n      });\n    }\n  }, {\n    key: \"_paintImage\",\n    value: function _paintImage(image, opacity) {\n      var _this8 = this;\n      this.draw(function (ctx) {\n        paintImage(ctx, _this8.size, image, opacity);\n      });\n    }\n  }, {\n    key: \"_repairStyle\",\n    value: function _repairStyle() {\n      var _a, _b;\n      var element = this.element;\n      if (!element) {\n        return;\n      }\n      (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n      this._initStyle();\n      this.initBackground();\n      (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(element, {\n        attributes: true\n      });\n    }\n  }, {\n    key: \"_resetOriginalStyle\",\n    value: function _resetOriginalStyle() {\n      var element = this.element,\n        originalStyle = this._originalStyle;\n      if (!(element && originalStyle)) {\n        return;\n      }\n      element.style.position = originalStyle.position;\n      element.style.zIndex = originalStyle.zIndex;\n      element.style.top = originalStyle.top;\n      element.style.left = originalStyle.left;\n      element.style.width = originalStyle.width;\n      element.style.height = originalStyle.height;\n    }\n  }, {\n    key: \"_setFullScreenStyle\",\n    value: function _setFullScreenStyle() {\n      var element = this.element;\n      if (!element) {\n        return;\n      }\n      var priority = \"important\";\n      element.style.setProperty(\"position\", \"fixed\", priority);\n      element.style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n      element.style.setProperty(\"top\", \"0\", priority);\n      element.style.setProperty(\"left\", \"0\", priority);\n      element.style.setProperty(\"width\", \"100%\", priority);\n      element.style.setProperty(\"height\", \"100%\", priority);\n    }\n  }]);\n  return Canvas;\n}();","map":{"version":3,"names":["clear","drawParticle","drawParticlePlugin","drawPlugin","paintBase","paintImage","deepExtend","isSsr","getStyleFromHsl","getStyleFromRgb","rangeColorToHsl","rangeColorToRgb","generatedAttribute","setTransformValue","factor","newFactor","key","_a","newValue","undefined","Canvas","container","_this","_classCallCheck","size","height","width","_context","_generated","_preDrawUpdaters","_postDrawUpdaters","_resizePlugins","_colorPlugins","_mutationObserver","MutationObserver","records","_iterator","_createForOfIteratorHelper","_step","s","n","done","record","value","type","attributeName","_repairStyle","err","e","f","_createClass","get","actualOptions","fullScreen","enable","_this2","options","trail","particles","move","trailFill","_trailFill","backgroundMask","paint","length","color","_paintBase","opacity","image","_paintImage","draw","ctx","destroy","_b","disconnect","element","remove","_resetOriginalStyle","stop","cb","particle","delta","_this3","spawning","destroyed","radius","getRadius","pfColor","getFillColor","psColor","getStrokeColor","_this$_getPluginParti","_getPluginParticleColors","_this$_getPluginParti2","_slicedToArray","fColor","sColor","_c","_d","zIndexOptions","zIndex","zOpacityFactor","Math","pow","zIndexFactor","opacityRate","bubble","strokeOpacity","zOpacity","zStrokeOpacity","transform","colorStyles","fill","stroke","_applyPreDrawUpdaters","context","composite","sizeRate","shadow","_applyPostDrawUpdaters","plugin","_init","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","prev","next","resize","_initStyle","_initCover","_initTrail","t0","console","error","initBackground","observe","attributes","initUpdaters","initPlugins","init","apply","arguments","background","elementStyle","style","backgroundColor","backgroundImage","backgroundPosition","position","backgroundRepeat","repeat","backgroundSize","_iterator2","plugins","_step2","_step2$value","push","particleFillColor","particleStrokeColor","_iterator3","updaters","_step3","updater","afterDraw","getColorStyles","getTransformValues","beforeDraw","loadCanvas","canvas","dataset","ariaHidden","_originalStyle","offsetHeight","offsetWidth","getContext","retina","_this4","cover","_coverColorStyle","pxRatio","pixelRatio","newSize","oldSize","Object","assign","started","resizeFactor","_this5","_windowResize","_callee2","needsRefresh","_callee2$","_context2","abrupt","updateActualOptions","setDensity","_applyResizePlugins","refresh","windowResize","_iterator4","_step4","call","_iterator5","_step5","_updater$getColorStyl","updaterTransform","_iterator6","_step6","_iterator7","_step7","coverRgb","coverColor","r","g","b","a","_fullScreen","_setFullScreenStyle","setProperty","_initTrail2","_callee3","_this6","fillColor","_trail","_callee3$","_context3","Promise","resolve","reject","img","document","createElement","addEventListener","evt","src","baseColor","_this7","_this8","originalStyle","top","left","priority","toString"],"sources":["C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/tsparticles-engine/esm/Core/Canvas.js"],"sourcesContent":["import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, isSsr } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    var _a;\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n        this._mutationObserver =\n            !isSsr() && typeof MutationObserver !== \"undefined\"\n                ? new MutationObserver((records) => {\n                    for (const record of records) {\n                        if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                            this._repairStyle();\n                        }\n                    }\n                })\n                : undefined;\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        var _a, _b;\n        (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        if (this._generated) {\n            (_b = this.element) === null || _b === void 0 ? void 0 : _b.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this.stop();\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        if (!this._context) {\n            return;\n        }\n        return cb(this._context);\n    }\n    drawParticle(particle, delta) {\n        var _a;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            var _a, _b, _c, _d;\n            const options = this.container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = (_c = (_a = particle.bubble.opacity) !== null && _a !== void 0 ? _a : (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1, strokeOpacity = (_d = particle.strokeOpacity) !== null && _d !== void 0 ? _d : opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container: this.container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            drawParticlePlugin(ctx, plugin, particle, delta);\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            drawPlugin(ctx, plugin, delta);\n        });\n    }\n    async init() {\n        var _a;\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            console.error(e);\n        }\n        this.initBackground();\n        if (this.element) {\n            (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.element, { attributes: true });\n        }\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element, elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        var _a, _b;\n        if (this._generated) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(this.element, { attributes: true });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return;\n        }\n        const oldSize = Object.assign({}, size);\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    stop() {\n        this.draw((ctx) => {\n            clear(ctx, this.size);\n        });\n    }\n    async windowResize() {\n        if (!this.element) {\n            return;\n        }\n        this.resize();\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n    _applyPostDrawUpdaters(particle) {\n        var _a;\n        for (const updater of this._postDrawUpdaters) {\n            (_a = updater.afterDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    _applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform) {\n        var _a;\n        for (const updater of this._preDrawUpdaters) {\n            if (updater.getColorStyles) {\n                const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                if (fill) {\n                    colorStyles.fill = fill;\n                }\n                if (stroke) {\n                    colorStyles.stroke = stroke;\n                }\n            }\n            if (updater.getTransformValues) {\n                const updaterTransform = updater.getTransformValues(particle);\n                for (const key in updaterTransform) {\n                    setTransformValue(transform, updaterTransform, key);\n                }\n            }\n            (_a = updater.beforeDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    _applyResizePlugins() {\n        for (const plugin of this._resizePlugins) {\n            if (plugin.resize) {\n                plugin.resize();\n            }\n        }\n    }\n    _getPluginParticleColors(particle) {\n        let fColor, sColor;\n        for (const plugin of this._colorPlugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    _initCover() {\n        const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n        if (coverRgb) {\n            const coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n            this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n        }\n    }\n    _initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        if (this._fullScreen) {\n            this._originalStyle = deepExtend({}, element.style);\n            this._setFullScreenStyle();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        for (const key in options.style) {\n            if (!key || !options.style) {\n                continue;\n            }\n            const value = options.style[key];\n            if (!value) {\n                continue;\n            }\n            element.style.setProperty(key, value, \"important\");\n        }\n    }\n    async _initTrail() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n        if (!trail.enable) {\n            return;\n        }\n        if (trailFill.color) {\n            const fillColor = rangeColorToRgb(trailFill.color);\n            if (!fillColor) {\n                return;\n            }\n            const trail = options.particles.move.trail;\n            this._trailFill = {\n                color: Object.assign({}, fillColor),\n                opacity: 1 / trail.length,\n            };\n        }\n        else {\n            await new Promise((resolve, reject) => {\n                if (!trailFill.image) {\n                    return;\n                }\n                const img = document.createElement(\"img\");\n                img.addEventListener(\"load\", () => {\n                    this._trailFill = {\n                        image: img,\n                        opacity: 1 / trail.length,\n                    };\n                    resolve();\n                });\n                img.addEventListener(\"error\", (evt) => {\n                    reject(evt.error);\n                });\n                img.src = trailFill.image;\n            });\n        }\n    }\n    _paintBase(baseColor) {\n        this.draw((ctx) => {\n            paintBase(ctx, this.size, baseColor);\n        });\n    }\n    _paintImage(image, opacity) {\n        this.draw((ctx) => {\n            paintImage(ctx, this.size, image, opacity);\n        });\n    }\n    _repairStyle() {\n        var _a, _b;\n        const element = this.element;\n        if (!element) {\n            return;\n        }\n        (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        this._initStyle();\n        this.initBackground();\n        (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(element, { attributes: true });\n    }\n    _resetOriginalStyle() {\n        const element = this.element, originalStyle = this._originalStyle;\n        if (!(element && originalStyle)) {\n            return;\n        }\n        element.style.position = originalStyle.position;\n        element.style.zIndex = originalStyle.zIndex;\n        element.style.top = originalStyle.top;\n        element.style.left = originalStyle.left;\n        element.style.width = originalStyle.width;\n        element.style.height = originalStyle.height;\n    }\n    _setFullScreenStyle() {\n        const element = this.element;\n        if (!element) {\n            return;\n        }\n        const priority = \"important\";\n        element.style.setProperty(\"position\", \"fixed\", priority);\n        element.style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n        element.style.setProperty(\"top\", \"0\", priority);\n        element.style.setProperty(\"left\", \"0\", priority);\n        element.style.setProperty(\"width\", \"100%\", priority);\n        element.style.setProperty(\"height\", \"100%\", priority);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}