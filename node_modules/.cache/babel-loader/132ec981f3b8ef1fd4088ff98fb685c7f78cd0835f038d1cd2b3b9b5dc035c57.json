{"ast":null,"code":"var _s = $RefreshSig$();\nconst Particle = () => {\n  _s();\n  const particlesInit = useCallback(async engine => {\n    console.log(engine);\n    // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    await loadFull(engine);\n  }, []);\n  const particlesLoaded = useCallback(async container => {\n    await console.log(container);\n  }, []);\n};\n_s(Particle, \"PjleD03JXt5mR6AE5+SxrsWvXBc=\");\n_c = Particle;\nexport default Particle;\nvar _c;\n$RefreshReg$(_c, \"Particle\");","map":{"version":3,"names":["Particle","_s","particlesInit","useCallback","engine","console","log","loadFull","particlesLoaded","container","_c","$RefreshReg$"],"sources":["C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/src/componenets/ParticleComponent/ParticleComponent.js"],"sourcesContent":["\r\nconst Particle = () => {\r\n    const particlesInit = useCallback(async engine => {\r\n        console.log(engine);\r\n        // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\r\n        // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\r\n        // starting from v2 you can add only the features you need reducing the bundle size\r\n        await loadFull(engine);\r\n    }, []);\r\n\r\n    const particlesLoaded = useCallback(async container => {\r\n        await console.log(container);\r\n    }, []);\r\n}\r\nexport default Particle;"],"mappings":";AACA,MAAMA,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,aAAa,GAAGC,WAAW,CAAC,MAAMC,MAAM,IAAI;IAC9CC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB;IACA;IACA;IACA,MAAMG,QAAQ,CAACH,MAAM,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,eAAe,GAAGL,WAAW,CAAC,MAAMM,SAAS,IAAI;IACnD,MAAMJ,OAAO,CAACC,GAAG,CAACG,SAAS,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;AACV,CAAC;AAAAR,EAAA,CAZKD,QAAQ;AAAAU,EAAA,GAARV,QAAQ;AAad,eAAeA,QAAQ;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}