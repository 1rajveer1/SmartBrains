{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Polymorph\\\\Desktop\\\\face_recognizer\\\\face_recognition_app\\\\SmartBrains\\\\src\\\\App.js\";\nimport './App.css';\nimport React from 'react';\nimport Logo from './componenets/Logo/Logo';\nimport Navigation from './componenets/navigation/Navigation';\nimport FaceRecognition from './componenets/FaceRecognition/FaceRecognition';\nimport ImageLinkForm from './componenets/ImageLinkForm/ImageLinkForm';\nimport SignIn from './componenets/SignIn/SignIn';\nimport Rank from './componenets/Rank/Rank';\nimport Register from './componenets/Register/Register';\nimport Particle from './componenets/ParticleComponent/ParticleComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clarifySteup = imageUrl => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentification\n  const PAT = '651d5bf1f1eb4078964573effae6a1a0';\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = '1rajveer1';\n  const APP_ID = '1rajveer1';\n  // Change these to whatever model and image URL you want to use\n  const MODEL_ID = 'face-detection';\n  const IMAGE_URL = imageUrl;\n\n  ///////////////////////////////////////////////////////////////////////////////////\n  // YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n  ///////////////////////////////////////////////////////////////////////////////////\n\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.calculateFaceLocation = data => {\n      const clarifyFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifyFace.left_col * width,\n        topRow: clarifyFace.top_row * height,\n        rightCol: width - clarifyFace.right_col * width,\n        bottomRow: height - clarifyFace.bottom_row * height\n      };\n    };\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSumbit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      // const url = this.state.input;\n      console.log('yup', this.state);\n      fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", clarifySteup(this.state.input)).then(response => response.json()).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n    this.onRouteChange = route => {\n      this.setState({\n        route: route\n      });\n    };\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signIn'\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        onRoteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this), this.state.route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSumbit: this.onButtonSumbit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: this.state.box,\n          imageUrl: this.state.imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this) : this.state.route === 'signIn' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Logo","Navigation","FaceRecognition","ImageLinkForm","SignIn","Rank","Register","Particle","jsxDEV","_jsxDEV","clarifySteup","imageUrl","PAT","USER_ID","APP_ID","MODEL_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","App","Component","constructor","calculateFaceLocation","data","clarifyFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","console","log","setState","onInputChange","event","input","target","value","onButtonSumbit","state","fetch","then","response","json","catch","err","onRouteChange","route","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onRoteChange"],"sources":["C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/src/App.js"],"sourcesContent":["import './App.css';\nimport React from 'react';\nimport Logo from './componenets/Logo/Logo';\nimport Navigation from './componenets/navigation/Navigation';\nimport FaceRecognition from './componenets/FaceRecognition/FaceRecognition';\nimport ImageLinkForm from './componenets/ImageLinkForm/ImageLinkForm';\nimport SignIn from './componenets/SignIn/SignIn';\nimport Rank from './componenets/Rank/Rank';\nimport Register from './componenets/Register/Register';\nimport Particle from './componenets/ParticleComponent/ParticleComponent';\n\n\nconst clarifySteup = (imageUrl) =>{\n      // Your PAT (Personal Access Token) can be found in the portal under Authentification\n      const PAT = '651d5bf1f1eb4078964573effae6a1a0';\n      // Specify the correct user_id/app_id pairings\n      // Since you're making inferences outside your app's scope\n      const USER_ID = '1rajveer1';       \n      const APP_ID = '1rajveer1';\n      // Change these to whatever model and image URL you want to use\n      const MODEL_ID = 'face-detection';\n      const IMAGE_URL = imageUrl;\n\n      ///////////////////////////////////////////////////////////////////////////////////\n      // YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n      ///////////////////////////////////////////////////////////////////////////////////\n  \n      const raw = JSON.stringify({\n          \"user_app_id\": {\n              \"user_id\": USER_ID,\n              \"app_id\": APP_ID\n          },\n          \"inputs\": [\n              {\n                  \"data\": {\n                      \"image\": {\n                          \"url\": IMAGE_URL\n                      }\n                  }\n              }\n          ]\n      });\n  \n      const requestOptions = {\n          method: 'POST',\n          headers: {\n              'Accept': 'application/json',\n              'Authorization': 'Key ' + PAT\n          },\n          body: raw\n      };\n    return requestOptions;\n}\n\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signIn',\n    }\n  };\n\n  calculateFaceLocation = (data) =>{\n    const clarifyFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage')\n    const width = Number(image.width)\n    const height = Number(image.height)\n\n    return {\n      leftCol : clarifyFace.left_col * width,\n      topRow: clarifyFace. top_row * height,\n      rightCol: width - (clarifyFace.right_col * width),\n      bottomRow: height - (clarifyFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) =>{\n    console.log(box);\n    this.setState({box: box})\n  }\n\n  onInputChange = (event) =>{\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSumbit = () => {\n    this.setState({imageUrl: this.state.input})\n    // const url = this.state.input;\n    console.log('yup',this.state)\n    fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", clarifySteup(this.state.input))\n    .then(response => response.json())\n    .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n    .catch(err => console.log(err));\n  }\n  onRouteChange = (route) =>{\n    this.setState({route: route})\n  }\n  render (){\n  return (\n    <div className=\"App\">\n      <Particle />\n      <Navigation onRoteChange={this.onRouteChange}/>\n      { this.state.route === 'home' ? \n        <div>\n        <Logo />\n        <Rank />\n        <ImageLinkForm onInputChange = {this.onInputChange} onButtonSumbit = {this.onButtonSumbit}/>\n        <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl} /> \n      </div>\n        : (\n          this.state.route === 'signIn' ?\n          <SignIn onRouteChange={this.onRouteChange}/> :\n          <Register onRouteChange={this.onRouteChange}/>\n        )\n  }\n    </div>\n  );\n}\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}