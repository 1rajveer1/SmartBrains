{"ast":null,"code":"import _classCallCheck from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Vector, calcPositionOrRandomFromSizeRanged, deepExtend, getRangeValue, isPointInside, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize\";\nexport var EmitterInstance = /*#__PURE__*/function () {\n  function EmitterInstance(engine, emitters, container, options, position) {\n    _classCallCheck(this, EmitterInstance);\n    var _a, _b, _c, _d, _e, _f, _g;\n    var _h;\n    this.emitters = emitters;\n    this.container = container;\n    this._engine = engine;\n    this._currentDuration = 0;\n    this._currentEmitDelay = 0;\n    this._currentSpawnDelay = 0;\n    this._initialPosition = position;\n    if (options instanceof Emitter) {\n      this.options = options;\n    } else {\n      this.options = new Emitter();\n      this.options.load(options);\n    }\n    this._spawnDelay = ((_a = this.options.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000 / this.container.retina.reduceFactor;\n    this.position = (_b = this._initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n    this.name = this.options.name;\n    this._shape = (_c = this._engine.emitterShapeManager) === null || _c === void 0 ? void 0 : _c.getShape(this.options.shape);\n    this.fill = this.options.fill;\n    this._firstSpawn = !this.options.life.wait;\n    this._startParticlesAdded = false;\n    var particlesOptions = deepExtend({}, this.options.particles);\n    particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : particlesOptions = {};\n    (_d = particlesOptions.move) !== null && _d !== void 0 ? _d : particlesOptions.move = {};\n    (_e = (_h = particlesOptions.move).direction) !== null && _e !== void 0 ? _e : _h.direction = this.options.direction;\n    if (this.options.spawnColor) {\n      this.spawnColor = rangeColorToHsl(this.options.spawnColor);\n    }\n    this._paused = !this.options.autoPlay;\n    this._particlesOptions = particlesOptions;\n    this.size = (_f = this.options.size) !== null && _f !== void 0 ? _f : function () {\n      var size = new EmitterSize();\n      size.load({\n        height: 0,\n        mode: \"percent\",\n        width: 0\n      });\n      return size;\n    }();\n    this._lifeCount = (_g = this.options.life.count) !== null && _g !== void 0 ? _g : -1;\n    this._immortal = this._lifeCount <= 0;\n    this._engine.dispatchEvent(\"emitterCreated\", {\n      container: container,\n      data: {\n        emitter: this\n      }\n    });\n    this.play();\n  }\n  _createClass(EmitterInstance, [{\n    key: \"externalPause\",\n    value: function externalPause() {\n      this._paused = true;\n      this.pause();\n    }\n  }, {\n    key: \"externalPlay\",\n    value: function externalPlay() {\n      this._paused = false;\n      this.play();\n    }\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      if (this.options.domId) {\n        var container = this.container,\n          element = document.getElementById(this.options.domId);\n        if (element) {\n          var elRect = element.getBoundingClientRect();\n          return {\n            x: (elRect.x + elRect.width / 2) * container.retina.pixelRatio,\n            y: (elRect.y + elRect.height / 2) * container.retina.pixelRatio\n          };\n        }\n      }\n      return this.position;\n    }\n  }, {\n    key: \"getSize\",\n    value: function getSize() {\n      var container = this.container;\n      if (this.options.domId) {\n        var element = document.getElementById(this.options.domId);\n        if (element) {\n          var elRect = element.getBoundingClientRect();\n          return {\n            width: elRect.width * container.retina.pixelRatio,\n            height: elRect.height * container.retina.pixelRatio\n          };\n        }\n      }\n      return {\n        width: this.size.mode === \"percent\" ? container.canvas.size.width * this.size.width / 100 : this.size.width,\n        height: this.size.mode === \"percent\" ? container.canvas.size.height * this.size.height / 100 : this.size.height\n      };\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      if (this._paused) {\n        return;\n      }\n      delete this._emitDelay;\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      var _a;\n      if (this._paused) {\n        return;\n      }\n      if (!(this.container.retina.reduceFactor && (this._lifeCount > 0 || this._immortal || !this.options.life.count) && (this._firstSpawn || this._currentSpawnDelay >= ((_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0)))) {\n        return;\n      }\n      if (this._emitDelay === undefined) {\n        var delay = getRangeValue(this.options.rate.delay);\n        this._emitDelay = 1000 * delay / this.container.retina.reduceFactor;\n      }\n      if (this._lifeCount > 0 || this._immortal) {\n        this.prepareToDie();\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var initialPosition = this._initialPosition;\n      this.position = initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin) ? initialPosition : this.calcPosition();\n    }\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      var _a, _b, _c;\n      if (this._paused) {\n        return;\n      }\n      if (this._firstSpawn) {\n        this._firstSpawn = false;\n        this._currentSpawnDelay = (_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0;\n        this._currentEmitDelay = (_b = this._emitDelay) !== null && _b !== void 0 ? _b : 0;\n      }\n      if (!this._startParticlesAdded) {\n        this._startParticlesAdded = true;\n        this.emitParticles(this.options.startCount);\n      }\n      if (this._duration !== undefined) {\n        this._currentDuration += delta.value;\n        if (this._currentDuration >= this._duration) {\n          this.pause();\n          if (this._spawnDelay !== undefined) {\n            delete this._spawnDelay;\n          }\n          if (!this._immortal) {\n            this._lifeCount--;\n          }\n          if (this._lifeCount > 0 || this._immortal) {\n            this.position = this.calcPosition();\n            this._spawnDelay = ((_c = this.options.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000 / this.container.retina.reduceFactor;\n          } else {\n            this.destroy();\n          }\n          this._currentDuration -= this._duration;\n          delete this._duration;\n        }\n      }\n      if (this._spawnDelay !== undefined) {\n        this._currentSpawnDelay += delta.value;\n        if (this._currentSpawnDelay >= this._spawnDelay) {\n          this._engine.dispatchEvent(\"emitterPlay\", {\n            container: this.container\n          });\n          this.play();\n          this._currentSpawnDelay -= this._currentSpawnDelay;\n          delete this._spawnDelay;\n        }\n      }\n      if (this._emitDelay !== undefined) {\n        this._currentEmitDelay += delta.value;\n        if (this._currentEmitDelay >= this._emitDelay) {\n          this.emit();\n          this._currentEmitDelay -= this._emitDelay;\n        }\n      }\n    }\n  }, {\n    key: \"calcPosition\",\n    value: function calcPosition() {\n      return calcPositionOrRandomFromSizeRanged({\n        size: this.container.canvas.size,\n        position: this.options.position\n      });\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.emitters.removeEmitter(this);\n      this._engine.dispatchEvent(\"emitterDestroyed\", {\n        container: this.container,\n        data: {\n          emitter: this\n        }\n      });\n    }\n  }, {\n    key: \"emit\",\n    value: function emit() {\n      if (this._paused) {\n        return;\n      }\n      var quantity = getRangeValue(this.options.rate.quantity);\n      this.emitParticles(quantity);\n    }\n  }, {\n    key: \"emitParticles\",\n    value: function emitParticles(quantity) {\n      var _a, _b, _c;\n      var position = this.getPosition(),\n        size = this.getSize(),\n        singleParticlesOptions = itemFromSingleOrMultiple(this._particlesOptions);\n      for (var i = 0; i < quantity; i++) {\n        var particlesOptions = deepExtend({}, singleParticlesOptions);\n        if (this.spawnColor) {\n          var hslAnimation = (_a = this.options.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n          if (hslAnimation) {\n            this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n            this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n            this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n          }\n          if (!particlesOptions.color) {\n            particlesOptions.color = {\n              value: this.spawnColor\n            };\n          } else {\n            particlesOptions.color.value = this.spawnColor;\n          }\n        }\n        if (!position) {\n          return;\n        }\n        var pPosition = (_c = (_b = this._shape) === null || _b === void 0 ? void 0 : _b.randomPosition(position, size, this.fill)) !== null && _c !== void 0 ? _c : position;\n        this.container.particles.addParticle(pPosition, particlesOptions);\n      }\n    }\n  }, {\n    key: \"prepareToDie\",\n    value: function prepareToDie() {\n      var _a;\n      if (this._paused) {\n        return;\n      }\n      var duration = (_a = this.options.life) === null || _a === void 0 ? void 0 : _a.duration;\n      if (this.container.retina.reduceFactor && (this._lifeCount > 0 || this._immortal) && duration !== undefined && duration > 0) {\n        this._duration = duration * 1000;\n      }\n    }\n  }, {\n    key: \"setColorAnimation\",\n    value: function setColorAnimation(animation, initValue, maxValue) {\n      var _a;\n      var container = this.container;\n      if (!animation.enable) {\n        return initValue;\n      }\n      var colorOffset = randomInRange(animation.offset),\n        delay = getRangeValue(this.options.rate.delay),\n        emitFactor = 1000 * delay / container.retina.reduceFactor,\n        colorSpeed = getRangeValue((_a = animation.speed) !== null && _a !== void 0 ? _a : 0);\n      return (initValue + colorSpeed * container.fpsLimit / emitFactor + colorOffset * 3.6) % maxValue;\n    }\n  }]);\n  return EmitterInstance;\n}();","map":{"version":3,"names":["Vector","calcPositionOrRandomFromSizeRanged","deepExtend","getRangeValue","isPointInside","itemFromSingleOrMultiple","randomInRange","rangeColorToHsl","Emitter","EmitterSize","EmitterInstance","engine","emitters","container","options","position","_classCallCheck","_a","_b","_c","_d","_e","_f","_g","_h","_engine","_currentDuration","_currentEmitDelay","_currentSpawnDelay","_initialPosition","load","_spawnDelay","life","delay","retina","reduceFactor","calcPosition","name","_shape","emitterShapeManager","getShape","shape","fill","_firstSpawn","wait","_startParticlesAdded","particlesOptions","particles","move","direction","spawnColor","_paused","autoPlay","_particlesOptions","size","height","mode","width","_lifeCount","count","_immortal","dispatchEvent","data","emitter","play","_createClass","key","value","externalPause","pause","externalPlay","getPosition","domId","element","document","getElementById","elRect","getBoundingClientRect","x","pixelRatio","y","getSize","canvas","_emitDelay","undefined","rate","prepareToDie","resize","initialPosition","origin","update","delta","emitParticles","startCount","_duration","destroy","emit","removeEmitter","quantity","singleParticlesOptions","i","hslAnimation","animation","h","setColorAnimation","s","l","color","pPosition","randomPosition","addParticle","duration","initValue","maxValue","enable","colorOffset","offset","emitFactor","colorSpeed","speed","fpsLimit"],"sources":["C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/tsparticles-plugin-emitters/esm/EmitterInstance.js"],"sourcesContent":["import { Vector, calcPositionOrRandomFromSizeRanged, deepExtend, getRangeValue, isPointInside, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize\";\nexport class EmitterInstance {\n    constructor(engine, emitters, container, options, position) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        var _h;\n        this.emitters = emitters;\n        this.container = container;\n        this._engine = engine;\n        this._currentDuration = 0;\n        this._currentEmitDelay = 0;\n        this._currentSpawnDelay = 0;\n        this._initialPosition = position;\n        if (options instanceof Emitter) {\n            this.options = options;\n        }\n        else {\n            this.options = new Emitter();\n            this.options.load(options);\n        }\n        this._spawnDelay = (((_a = this.options.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000) / this.container.retina.reduceFactor;\n        this.position = (_b = this._initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n        this.name = this.options.name;\n        this._shape = (_c = this._engine.emitterShapeManager) === null || _c === void 0 ? void 0 : _c.getShape(this.options.shape);\n        this.fill = this.options.fill;\n        this._firstSpawn = !this.options.life.wait;\n        this._startParticlesAdded = false;\n        let particlesOptions = deepExtend({}, this.options.particles);\n        particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : (particlesOptions = {});\n        (_d = particlesOptions.move) !== null && _d !== void 0 ? _d : (particlesOptions.move = {});\n        (_e = (_h = particlesOptions.move).direction) !== null && _e !== void 0 ? _e : (_h.direction = this.options.direction);\n        if (this.options.spawnColor) {\n            this.spawnColor = rangeColorToHsl(this.options.spawnColor);\n        }\n        this._paused = !this.options.autoPlay;\n        this._particlesOptions = particlesOptions;\n        this.size =\n            (_f = this.options.size) !== null && _f !== void 0 ? _f : (() => {\n                const size = new EmitterSize();\n                size.load({\n                    height: 0,\n                    mode: \"percent\",\n                    width: 0,\n                });\n                return size;\n            })();\n        this._lifeCount = (_g = this.options.life.count) !== null && _g !== void 0 ? _g : -1;\n        this._immortal = this._lifeCount <= 0;\n        this._engine.dispatchEvent(\"emitterCreated\", {\n            container,\n            data: {\n                emitter: this,\n            },\n        });\n        this.play();\n    }\n    externalPause() {\n        this._paused = true;\n        this.pause();\n    }\n    externalPlay() {\n        this._paused = false;\n        this.play();\n    }\n    getPosition() {\n        if (this.options.domId) {\n            const container = this.container, element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    x: (elRect.x + elRect.width / 2) * container.retina.pixelRatio,\n                    y: (elRect.y + elRect.height / 2) * container.retina.pixelRatio,\n                };\n            }\n        }\n        return this.position;\n    }\n    getSize() {\n        const container = this.container;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    width: elRect.width * container.retina.pixelRatio,\n                    height: elRect.height * container.retina.pixelRatio,\n                };\n            }\n        }\n        return {\n            width: this.size.mode === \"percent\"\n                ? (container.canvas.size.width * this.size.width) / 100\n                : this.size.width,\n            height: this.size.mode === \"percent\"\n                ? (container.canvas.size.height * this.size.height) / 100\n                : this.size.height,\n        };\n    }\n    pause() {\n        if (this._paused) {\n            return;\n        }\n        delete this._emitDelay;\n    }\n    play() {\n        var _a;\n        if (this._paused) {\n            return;\n        }\n        if (!(this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal || !this.options.life.count) &&\n            (this._firstSpawn || this._currentSpawnDelay >= ((_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0)))) {\n            return;\n        }\n        if (this._emitDelay === undefined) {\n            const delay = getRangeValue(this.options.rate.delay);\n            this._emitDelay = (1000 * delay) / this.container.retina.reduceFactor;\n        }\n        if (this._lifeCount > 0 || this._immortal) {\n            this.prepareToDie();\n        }\n    }\n    resize() {\n        const initialPosition = this._initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    update(delta) {\n        var _a, _b, _c;\n        if (this._paused) {\n            return;\n        }\n        if (this._firstSpawn) {\n            this._firstSpawn = false;\n            this._currentSpawnDelay = (_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0;\n            this._currentEmitDelay = (_b = this._emitDelay) !== null && _b !== void 0 ? _b : 0;\n        }\n        if (!this._startParticlesAdded) {\n            this._startParticlesAdded = true;\n            this.emitParticles(this.options.startCount);\n        }\n        if (this._duration !== undefined) {\n            this._currentDuration += delta.value;\n            if (this._currentDuration >= this._duration) {\n                this.pause();\n                if (this._spawnDelay !== undefined) {\n                    delete this._spawnDelay;\n                }\n                if (!this._immortal) {\n                    this._lifeCount--;\n                }\n                if (this._lifeCount > 0 || this._immortal) {\n                    this.position = this.calcPosition();\n                    this._spawnDelay = (((_c = this.options.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000) / this.container.retina.reduceFactor;\n                }\n                else {\n                    this.destroy();\n                }\n                this._currentDuration -= this._duration;\n                delete this._duration;\n            }\n        }\n        if (this._spawnDelay !== undefined) {\n            this._currentSpawnDelay += delta.value;\n            if (this._currentSpawnDelay >= this._spawnDelay) {\n                this._engine.dispatchEvent(\"emitterPlay\", {\n                    container: this.container,\n                });\n                this.play();\n                this._currentSpawnDelay -= this._currentSpawnDelay;\n                delete this._spawnDelay;\n            }\n        }\n        if (this._emitDelay !== undefined) {\n            this._currentEmitDelay += delta.value;\n            if (this._currentEmitDelay >= this._emitDelay) {\n                this.emit();\n                this._currentEmitDelay -= this._emitDelay;\n            }\n        }\n    }\n    calcPosition() {\n        return calcPositionOrRandomFromSizeRanged({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n    }\n    destroy() {\n        this.emitters.removeEmitter(this);\n        this._engine.dispatchEvent(\"emitterDestroyed\", {\n            container: this.container,\n            data: {\n                emitter: this,\n            },\n        });\n    }\n    emit() {\n        if (this._paused) {\n            return;\n        }\n        const quantity = getRangeValue(this.options.rate.quantity);\n        this.emitParticles(quantity);\n    }\n    emitParticles(quantity) {\n        var _a, _b, _c;\n        const position = this.getPosition(), size = this.getSize(), singleParticlesOptions = itemFromSingleOrMultiple(this._particlesOptions);\n        for (let i = 0; i < quantity; i++) {\n            const particlesOptions = deepExtend({}, singleParticlesOptions);\n            if (this.spawnColor) {\n                const hslAnimation = (_a = this.options.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n                if (hslAnimation) {\n                    this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n                    this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n                    this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n                }\n                if (!particlesOptions.color) {\n                    particlesOptions.color = {\n                        value: this.spawnColor,\n                    };\n                }\n                else {\n                    particlesOptions.color.value = this.spawnColor;\n                }\n            }\n            if (!position) {\n                return;\n            }\n            const pPosition = (_c = (_b = this._shape) === null || _b === void 0 ? void 0 : _b.randomPosition(position, size, this.fill)) !== null && _c !== void 0 ? _c : position;\n            this.container.particles.addParticle(pPosition, particlesOptions);\n        }\n    }\n    prepareToDie() {\n        var _a;\n        if (this._paused) {\n            return;\n        }\n        const duration = (_a = this.options.life) === null || _a === void 0 ? void 0 : _a.duration;\n        if (this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal) &&\n            duration !== undefined &&\n            duration > 0) {\n            this._duration = duration * 1000;\n        }\n    }\n    setColorAnimation(animation, initValue, maxValue) {\n        var _a;\n        const container = this.container;\n        if (!animation.enable) {\n            return initValue;\n        }\n        const colorOffset = randomInRange(animation.offset), delay = getRangeValue(this.options.rate.delay), emitFactor = (1000 * delay) / container.retina.reduceFactor, colorSpeed = getRangeValue((_a = animation.speed) !== null && _a !== void 0 ? _a : 0);\n        return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * 3.6) % maxValue;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}