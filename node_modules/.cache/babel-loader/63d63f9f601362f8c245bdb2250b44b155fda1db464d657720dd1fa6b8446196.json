{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _slicedToArray from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _asyncToGenerator from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createForOfIteratorHelper from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { calcPositionFromSize } from \"../Utils/NumberUtils\";\nexport var Particles = /*#__PURE__*/function () {\n  function Particles(engine, container) {\n    _classCallCheck(this, Particles);\n    this.container = container;\n    this._engine = engine;\n    this.nextId = 0;\n    this.array = [];\n    this.zArray = [];\n    this.pool = [];\n    this.limit = 0;\n    this.needsSort = false;\n    this.lastZIndex = 0;\n    this.interactionManager = new InteractionManager(this._engine, container);\n    var canvasSize = this.container.canvas.size;\n    this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n    this.movers = this._engine.plugins.getMovers(container, true);\n    this.updaters = this._engine.plugins.getUpdaters(container, true);\n  }\n  _createClass(Particles, [{\n    key: \"count\",\n    get: function get() {\n      return this.array.length;\n    }\n  }, {\n    key: \"addManualParticles\",\n    value: function addManualParticles() {\n      var container = this.container,\n        options = container.actualOptions;\n      var _iterator = _createForOfIteratorHelper(options.manualParticles),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var particle = _step.value;\n          this.addParticle(calcPositionFromSize({\n            size: container.canvas.size,\n            position: particle.position\n          }), particle.options);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"addParticle\",\n    value: function addParticle(position, overrideOptions, group, initializer) {\n      var container = this.container,\n        options = container.actualOptions,\n        limit = options.particles.number.limit;\n      if (limit > 0) {\n        var countToRemove = this.count + 1 - limit;\n        if (countToRemove > 0) {\n          this.removeQuantity(countToRemove);\n        }\n      }\n      return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.array = [];\n      this.zArray = [];\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.array = [];\n      this.zArray = [];\n      this.movers = [];\n      this.updaters = [];\n    }\n  }, {\n    key: \"draw\",\n    value: function () {\n      var _draw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(delta) {\n        var container, canvasSize, _iterator2, _step2, _step2$value, plugin, _iterator3, _step3, p;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              container = this.container, canvasSize = this.container.canvas.size;\n              this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n              container.canvas.clear();\n              _context.next = 5;\n              return this.update(delta);\n            case 5:\n              if (this.needsSort) {\n                this.zArray.sort(function (a, b) {\n                  return b.position.z - a.position.z || a.id - b.id;\n                });\n                this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n                this.needsSort = false;\n              }\n              _iterator2 = _createForOfIteratorHelper(container.plugins);\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  _step2$value = _slicedToArray(_step2.value, 2), plugin = _step2$value[1];\n                  container.canvas.drawPlugin(plugin, delta);\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n              _iterator3 = _createForOfIteratorHelper(this.zArray);\n              try {\n                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  p = _step3.value;\n                  p.draw(delta);\n                }\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function draw(_x) {\n        return _draw.apply(this, arguments);\n      }\n      return draw;\n    }()\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      this.interactionManager.handleClickMode(mode);\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _a;\n      var container = this.container,\n        options = container.actualOptions;\n      this.lastZIndex = 0;\n      this.needsSort = false;\n      var handled = false;\n      this.updaters = this._engine.plugins.getUpdaters(container, true);\n      this.interactionManager.init();\n      var _iterator4 = _createForOfIteratorHelper(container.plugins),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n            plugin = _step4$value[1];\n          if (plugin.particlesInitialization !== undefined) {\n            handled = plugin.particlesInitialization();\n          }\n          if (handled) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      this.interactionManager.init();\n      var _iterator5 = _createForOfIteratorHelper(container.pathGenerators),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _step5$value = _slicedToArray(_step5.value, 2),\n            pathGenerator = _step5$value[1];\n          pathGenerator.init(container);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      this.addManualParticles();\n      if (!handled) {\n        for (var group in options.particles.groups) {\n          var groupOptions = options.particles.groups[group];\n          for (var i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n            this.addParticle(undefined, groupOptions, group);\n          }\n        }\n        for (var _i = this.count; _i < options.particles.number.value; _i++) {\n          this.addParticle();\n        }\n      }\n    }\n  }, {\n    key: \"push\",\n    value: function push(nb, mouse, overrideOptions, group) {\n      this.pushing = true;\n      for (var i = 0; i < nb; i++) {\n        this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n      }\n      this.pushing = false;\n    }\n  }, {\n    key: \"redraw\",\n    value: function () {\n      var _redraw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              this.clear();\n              this.init();\n              _context2.next = 4;\n              return this.draw({\n                value: 0,\n                factor: 0\n              });\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function redraw() {\n        return _redraw.apply(this, arguments);\n      }\n      return redraw;\n    }()\n  }, {\n    key: \"remove\",\n    value: function remove(particle, group, override) {\n      this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n  }, {\n    key: \"removeAt\",\n    value: function removeAt(index) {\n      var quantity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var group = arguments.length > 2 ? arguments[2] : undefined;\n      var override = arguments.length > 3 ? arguments[3] : undefined;\n      if (index < 0 || index > this.count) {\n        return;\n      }\n      var deleted = 0;\n      for (var i = index; deleted < quantity && i < this.count; i++) {\n        var particle = this.array[i];\n        if (!particle || particle.group !== group) {\n          continue;\n        }\n        particle.destroy(override);\n        this.array.splice(i--, 1);\n        var zIdx = this.zArray.indexOf(particle);\n        this.zArray.splice(zIdx, 1);\n        this.pool.push(particle);\n        deleted++;\n        this._engine.dispatchEvent(\"particleRemoved\", {\n          container: this.container,\n          data: {\n            particle: particle\n          }\n        });\n      }\n    }\n  }, {\n    key: \"removeQuantity\",\n    value: function removeQuantity(quantity, group) {\n      this.removeAt(0, quantity, group);\n    }\n  }, {\n    key: \"setDensity\",\n    value: function setDensity() {\n      var options = this.container.actualOptions;\n      for (var group in options.particles.groups) {\n        this._applyDensity(options.particles.groups[group], 0, group);\n      }\n      this._applyDensity(options.particles, options.manualParticles.length);\n    }\n  }, {\n    key: \"update\",\n    value: function () {\n      var _update = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(delta) {\n        var _a, _b, container, particlesToDelete, _iterator6, _step6, _step6$value, pathGenerator, _iterator7, _step7, _step7$value, plugin, _iterator8, _step8, _particle, resizeFactor, _iterator10, _step10, _step10$value, _plugin, _iterator11, _step11, mover, _i2, _particlesToDelete, particle, _iterator9, _step9, _particle2, _iterator12, _step12, updater;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              container = this.container, particlesToDelete = [];\n              _iterator6 = _createForOfIteratorHelper(container.pathGenerators);\n              try {\n                for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                  _step6$value = _slicedToArray(_step6.value, 2), pathGenerator = _step6$value[1];\n                  pathGenerator.update();\n                }\n              } catch (err) {\n                _iterator6.e(err);\n              } finally {\n                _iterator6.f();\n              }\n              _iterator7 = _createForOfIteratorHelper(container.plugins);\n              try {\n                for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                  _step7$value = _slicedToArray(_step7.value, 2), plugin = _step7$value[1];\n                  (_a = plugin.update) === null || _a === void 0 ? void 0 : _a.call(plugin, delta);\n                }\n              } catch (err) {\n                _iterator7.e(err);\n              } finally {\n                _iterator7.f();\n              }\n              _iterator8 = _createForOfIteratorHelper(this.array);\n              _context3.prev = 6;\n              _iterator8.s();\n            case 8:\n              if ((_step8 = _iterator8.n()).done) {\n                _context3.next = 41;\n                break;\n              }\n              _particle = _step8.value;\n              resizeFactor = container.canvas.resizeFactor;\n              if (resizeFactor && !_particle.ignoresResizeRatio) {\n                _particle.position.x *= resizeFactor.width;\n                _particle.position.y *= resizeFactor.height;\n                _particle.initialPosition.x *= resizeFactor.width;\n                _particle.initialPosition.y *= resizeFactor.height;\n              }\n              _particle.ignoresResizeRatio = false;\n              _context3.next = 15;\n              return this.interactionManager.reset(_particle);\n            case 15:\n              _iterator10 = _createForOfIteratorHelper(this.container.plugins);\n              _context3.prev = 16;\n              _iterator10.s();\n            case 18:\n              if ((_step10 = _iterator10.n()).done) {\n                _context3.next = 25;\n                break;\n              }\n              _step10$value = _slicedToArray(_step10.value, 2), _plugin = _step10$value[1];\n              if (!_particle.destroyed) {\n                _context3.next = 22;\n                break;\n              }\n              return _context3.abrupt(\"break\", 25);\n            case 22:\n              (_b = _plugin.particleUpdate) === null || _b === void 0 ? void 0 : _b.call(_plugin, _particle, delta);\n            case 23:\n              _context3.next = 18;\n              break;\n            case 25:\n              _context3.next = 30;\n              break;\n            case 27:\n              _context3.prev = 27;\n              _context3.t0 = _context3[\"catch\"](16);\n              _iterator10.e(_context3.t0);\n            case 30:\n              _context3.prev = 30;\n              _iterator10.f();\n              return _context3.finish(30);\n            case 33:\n              _iterator11 = _createForOfIteratorHelper(this.movers);\n              try {\n                for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n                  mover = _step11.value;\n                  if (mover.isEnabled(_particle)) {\n                    mover.move(_particle, delta);\n                  }\n                }\n              } catch (err) {\n                _iterator11.e(err);\n              } finally {\n                _iterator11.f();\n              }\n              if (!_particle.destroyed) {\n                _context3.next = 38;\n                break;\n              }\n              particlesToDelete.push(_particle);\n              return _context3.abrupt(\"continue\", 39);\n            case 38:\n              this.quadTree.insert(new Point(_particle.getPosition(), _particle));\n            case 39:\n              _context3.next = 8;\n              break;\n            case 41:\n              _context3.next = 46;\n              break;\n            case 43:\n              _context3.prev = 43;\n              _context3.t1 = _context3[\"catch\"](6);\n              _iterator8.e(_context3.t1);\n            case 46:\n              _context3.prev = 46;\n              _iterator8.f();\n              return _context3.finish(46);\n            case 49:\n              for (_i2 = 0, _particlesToDelete = particlesToDelete; _i2 < _particlesToDelete.length; _i2++) {\n                particle = _particlesToDelete[_i2];\n                this.remove(particle);\n              }\n              _context3.next = 52;\n              return this.interactionManager.externalInteract(delta);\n            case 52:\n              _iterator9 = _createForOfIteratorHelper(this.array);\n              _context3.prev = 53;\n              _iterator9.s();\n            case 55:\n              if ((_step9 = _iterator9.n()).done) {\n                _context3.next = 64;\n                break;\n              }\n              _particle2 = _step9.value;\n              _iterator12 = _createForOfIteratorHelper(this.updaters);\n              try {\n                for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n                  updater = _step12.value;\n                  updater.update(_particle2, delta);\n                }\n              } catch (err) {\n                _iterator12.e(err);\n              } finally {\n                _iterator12.f();\n              }\n              if (!(!_particle2.destroyed && !_particle2.spawning)) {\n                _context3.next = 62;\n                break;\n              }\n              _context3.next = 62;\n              return this.interactionManager.particlesInteract(_particle2, delta);\n            case 62:\n              _context3.next = 55;\n              break;\n            case 64:\n              _context3.next = 69;\n              break;\n            case 66:\n              _context3.prev = 66;\n              _context3.t2 = _context3[\"catch\"](53);\n              _iterator9.e(_context3.t2);\n            case 69:\n              _context3.prev = 69;\n              _iterator9.f();\n              return _context3.finish(69);\n            case 72:\n              delete container.canvas.resizeFactor;\n            case 73:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[6, 43, 46, 49], [16, 27, 30, 33], [53, 66, 69, 72]]);\n      }));\n      function update(_x2) {\n        return _update.apply(this, arguments);\n      }\n      return update;\n    }()\n  }, {\n    key: \"_applyDensity\",\n    value: function _applyDensity(options, manualCount, group) {\n      var _a;\n      if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n        return;\n      }\n      var numberOptions = options.number,\n        densityFactor = this._initDensityFactor(numberOptions.density),\n        optParticlesNumber = numberOptions.value,\n        optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber,\n        particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount,\n        particlesCount = Math.min(this.count, this.array.filter(function (t) {\n          return t.group === group;\n        }).length);\n      this.limit = numberOptions.limit * densityFactor;\n      if (particlesCount < particlesNumber) {\n        this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n      } else if (particlesCount > particlesNumber) {\n        this.removeQuantity(particlesCount - particlesNumber, group);\n      }\n    }\n  }, {\n    key: \"_initDensityFactor\",\n    value: function _initDensityFactor(densityOptions) {\n      var container = this.container;\n      if (!container.canvas.element || !densityOptions.enable) {\n        return 1;\n      }\n      var canvas = container.canvas.element,\n        pxRatio = container.retina.pixelRatio;\n      return canvas.width * canvas.height / (densityOptions.factor * Math.pow(pxRatio, 2) * densityOptions.area);\n    }\n  }, {\n    key: \"_pushParticle\",\n    value: function _pushParticle(position, overrideOptions, group, initializer) {\n      try {\n        var particle = this.pool.pop();\n        if (particle) {\n          particle.init(this.nextId, position, overrideOptions, group);\n        } else {\n          particle = new Particle(this._engine, this.nextId, this.container, position, overrideOptions, group);\n        }\n        var canAdd = true;\n        if (initializer) {\n          canAdd = initializer(particle);\n        }\n        if (!canAdd) {\n          return;\n        }\n        this.array.push(particle);\n        this.zArray.push(particle);\n        this.nextId++;\n        this._engine.dispatchEvent(\"particleAdded\", {\n          container: this.container,\n          data: {\n            particle: particle\n          }\n        });\n        return particle;\n      } catch (e) {\n        console.warn(\"error adding particle: \".concat(e));\n        return;\n      }\n    }\n  }]);\n  return Particles;\n}();","map":{"version":3,"names":["InteractionManager","Particle","Point","QuadTree","Rectangle","calcPositionFromSize","Particles","engine","container","_classCallCheck","_engine","nextId","array","zArray","pool","limit","needsSort","lastZIndex","interactionManager","canvasSize","canvas","size","quadTree","width","height","movers","plugins","getMovers","updaters","getUpdaters","_createClass","key","get","length","value","addManualParticles","options","actualOptions","_iterator","_createForOfIteratorHelper","manualParticles","_step","s","n","done","particle","addParticle","position","err","e","f","overrideOptions","group","initializer","particles","number","countToRemove","count","removeQuantity","_pushParticle","clear","destroy","_draw","_asyncToGenerator","_regeneratorRuntime","mark","_callee","delta","_iterator2","_step2","_step2$value","plugin","_iterator3","_step3","p","wrap","_callee$","_context","prev","next","update","sort","a","b","z","id","_slicedToArray","drawPlugin","draw","stop","_x","apply","arguments","handleClickMode","mode","init","_a","handled","_iterator4","_step4","_step4$value","particlesInitialization","undefined","_iterator5","pathGenerators","_step5","_step5$value","pathGenerator","groups","groupOptions","i","j","push","nb","mouse","pushing","_redraw","_callee2","_callee2$","_context2","factor","redraw","remove","override","removeAt","indexOf","index","quantity","deleted","splice","zIdx","dispatchEvent","data","setDensity","_applyDensity","_update","_callee3","_b","particlesToDelete","_iterator6","_step6","_step6$value","_iterator7","_step7","_step7$value","_iterator8","_step8","_particle","resizeFactor","_iterator10","_step10","_step10$value","_plugin","_iterator11","_step11","mover","_i2","_particlesToDelete","_iterator9","_step9","_particle2","_iterator12","_step12","updater","_callee3$","_context3","call","ignoresResizeRatio","x","y","initialPosition","reset","destroyed","abrupt","particleUpdate","t0","finish","isEnabled","move","insert","getPosition","t1","externalInteract","spawning","particlesInteract","t2","_x2","manualCount","density","enable","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","Math","min","particlesCount","filter","t","abs","densityOptions","element","pxRatio","retina","pixelRatio","pow","area","pop","canAdd","console","warn","concat"],"sources":["C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/tsparticles-engine/esm/Core/Particles.js"],"sourcesContent":["import { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { calcPositionFromSize } from \"../Utils/NumberUtils\";\nexport class Particles {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.nextId = 0;\n        this.array = [];\n        this.zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this.interactionManager = new InteractionManager(this._engine, container);\n        const canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this.array.length;\n    }\n    addManualParticles() {\n        const container = this.container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(calcPositionFromSize({\n                size: container.canvas.size,\n                position: particle.position,\n            }), particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this.container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this.array = [];\n        this.zArray = [];\n    }\n    destroy() {\n        this.array = [];\n        this.zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this.container, canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        container.canvas.clear();\n        await this.update(delta);\n        if (this.needsSort) {\n            this.zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.zArray) {\n            p.draw(delta);\n        }\n    }\n    handleClickMode(mode) {\n        this.interactionManager.handleClickMode(mode);\n    }\n    init() {\n        var _a;\n        const container = this.container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this.interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            const particle = this.array[i];\n            if (!particle || particle.group !== group) {\n                continue;\n            }\n            particle.destroy(override);\n            this.array.splice(i--, 1);\n            const zIdx = this.zArray.indexOf(particle);\n            this.zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            deleted++;\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this.container.actualOptions;\n        for (const group in options.particles.groups) {\n            this._applyDensity(options.particles.groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        var _a, _b;\n        const container = this.container, particlesToDelete = [];\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            (_a = plugin.update) === null || _a === void 0 ? void 0 : _a.call(plugin, delta);\n        }\n        for (const particle of this.array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this.interactionManager.reset(particle);\n            for (const [, plugin] of this.container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                (_b = plugin.particleUpdate) === null || _b === void 0 ? void 0 : _b.call(plugin, particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        await this.interactionManager.externalInteract(delta);\n        for (const particle of this.array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    _applyDensity(options, manualCount, group) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.array.filter((t) => t.group === group).length);\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber, group);\n        }\n    }\n    _initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n    }\n    _pushParticle(position, overrideOptions, group, initializer) {\n        try {\n            let particle = this.pool.pop();\n            if (particle) {\n                particle.init(this.nextId, position, overrideOptions, group);\n            }\n            else {\n                particle = new Particle(this._engine, this.nextId, this.container, position, overrideOptions, group);\n            }\n            let canAdd = true;\n            if (initializer) {\n                canAdd = initializer(particle);\n            }\n            if (!canAdd) {\n                return;\n            }\n            this.array.push(particle);\n            this.zArray.push(particle);\n            this.nextId++;\n            this._engine.dispatchEvent(\"particleAdded\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n            return particle;\n        }\n        catch (e) {\n            console.warn(`error adding particle: ${e}`);\n            return;\n        }\n    }\n}\n"],"mappings":";;;;;;AAAA,SAASA,kBAAkB,QAAQ,4BAA4B;AAC/D,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,KAAK,QAAQ,eAAe;AACrC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,oBAAoB,QAAQ,sBAAsB;AAC3D,WAAaC,SAAS;EAClB,SAAAA,UAAYC,MAAM,EAAEC,SAAS,EAAE;IAAAC,eAAA,OAAAH,SAAA;IAC3B,IAAI,CAACE,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACE,OAAO,GAAGH,MAAM;IACrB,IAAI,CAACI,MAAM,GAAG,CAAC;IACf,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,KAAK,GAAG,CAAC;IACd,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,UAAU,GAAG,CAAC;IACnB,IAAI,CAACC,kBAAkB,GAAG,IAAIlB,kBAAkB,CAAC,IAAI,CAACU,OAAO,EAAEF,SAAS,CAAC;IACzE,IAAMW,UAAU,GAAG,IAAI,CAACX,SAAS,CAACY,MAAM,CAACC,IAAI;IAC7C,IAAI,CAACC,QAAQ,GAAG,IAAInB,QAAQ,CAAC,IAAIC,SAAS,CAAC,CAACe,UAAU,CAACI,KAAK,GAAG,CAAC,EAAE,CAACJ,UAAU,CAACK,MAAM,GAAG,CAAC,EAAGL,UAAU,CAACI,KAAK,GAAG,CAAC,GAAI,CAAC,EAAGJ,UAAU,CAACK,MAAM,GAAG,CAAC,GAAI,CAAC,CAAC,EAAE,CAAC,CAAC;IACtJ,IAAI,CAACC,MAAM,GAAG,IAAI,CAACf,OAAO,CAACgB,OAAO,CAACC,SAAS,CAACnB,SAAS,EAAE,IAAI,CAAC;IAC7D,IAAI,CAACoB,QAAQ,GAAG,IAAI,CAAClB,OAAO,CAACgB,OAAO,CAACG,WAAW,CAACrB,SAAS,EAAE,IAAI,CAAC;EACrE;EAACsB,YAAA,CAAAxB,SAAA;IAAAyB,GAAA;IAAAC,GAAA,EACD,SAAAA,IAAA,EAAY;MACR,OAAO,IAAI,CAACpB,KAAK,CAACqB,MAAM;IAC5B;EAAC;IAAAF,GAAA;IAAAG,KAAA,EACD,SAAAC,mBAAA,EAAqB;MACjB,IAAM3B,SAAS,GAAG,IAAI,CAACA,SAAS;QAAE4B,OAAO,GAAG5B,SAAS,CAAC6B,aAAa;MAAC,IAAAC,SAAA,GAAAC,0BAAA,CAC7CH,OAAO,CAACI,eAAe;QAAAC,KAAA;MAAA;QAA9C,KAAAH,SAAA,CAAAI,CAAA,MAAAD,KAAA,GAAAH,SAAA,CAAAK,CAAA,IAAAC,IAAA,GAAgD;UAAA,IAArCC,QAAQ,GAAAJ,KAAA,CAAAP,KAAA;UACf,IAAI,CAACY,WAAW,CAACzC,oBAAoB,CAAC;YAClCgB,IAAI,EAAEb,SAAS,CAACY,MAAM,CAACC,IAAI;YAC3B0B,QAAQ,EAAEF,QAAQ,CAACE;UACvB,CAAC,CAAC,EAAEF,QAAQ,CAACT,OAAO,CAAC;QACzB;MAAC,SAAAY,GAAA;QAAAV,SAAA,CAAAW,CAAA,CAAAD,GAAA;MAAA;QAAAV,SAAA,CAAAY,CAAA;MAAA;IACL;EAAC;IAAAnB,GAAA;IAAAG,KAAA,EACD,SAAAY,YAAYC,QAAQ,EAAEI,eAAe,EAAEC,KAAK,EAAEC,WAAW,EAAE;MACvD,IAAM7C,SAAS,GAAG,IAAI,CAACA,SAAS;QAAE4B,OAAO,GAAG5B,SAAS,CAAC6B,aAAa;QAAEtB,KAAK,GAAGqB,OAAO,CAACkB,SAAS,CAACC,MAAM,CAACxC,KAAK;MAC3G,IAAIA,KAAK,GAAG,CAAC,EAAE;QACX,IAAMyC,aAAa,GAAG,IAAI,CAACC,KAAK,GAAG,CAAC,GAAG1C,KAAK;QAC5C,IAAIyC,aAAa,GAAG,CAAC,EAAE;UACnB,IAAI,CAACE,cAAc,CAACF,aAAa,CAAC;QACtC;MACJ;MACA,OAAO,IAAI,CAACG,aAAa,CAACZ,QAAQ,EAAEI,eAAe,EAAEC,KAAK,EAAEC,WAAW,CAAC;IAC5E;EAAC;IAAAtB,GAAA;IAAAG,KAAA,EACD,SAAA0B,MAAA,EAAQ;MACJ,IAAI,CAAChD,KAAK,GAAG,EAAE;MACf,IAAI,CAACC,MAAM,GAAG,EAAE;IACpB;EAAC;IAAAkB,GAAA;IAAAG,KAAA,EACD,SAAA2B,QAAA,EAAU;MACN,IAAI,CAACjD,KAAK,GAAG,EAAE;MACf,IAAI,CAACC,MAAM,GAAG,EAAE;MAChB,IAAI,CAACY,MAAM,GAAG,EAAE;MAChB,IAAI,CAACG,QAAQ,GAAG,EAAE;IACtB;EAAC;IAAAG,GAAA;IAAAG,KAAA;MAAA,IAAA4B,KAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CACD,SAAAC,QAAWC,KAAK;QAAA,IAAA3D,SAAA,EAAAW,UAAA,EAAAiD,UAAA,EAAAC,MAAA,EAAAC,YAAA,EAAAC,MAAA,EAAAC,UAAA,EAAAC,MAAA,EAAAC,CAAA;QAAA,OAAAV,mBAAA,GAAAW,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACNvE,SAAS,GAAG,IAAI,CAACA,SAAS,EAAEW,UAAU,GAAG,IAAI,CAACX,SAAS,CAACY,MAAM,CAACC,IAAI;cACzE,IAAI,CAACC,QAAQ,GAAG,IAAInB,QAAQ,CAAC,IAAIC,SAAS,CAAC,CAACe,UAAU,CAACI,KAAK,GAAG,CAAC,EAAE,CAACJ,UAAU,CAACK,MAAM,GAAG,CAAC,EAAGL,UAAU,CAACI,KAAK,GAAG,CAAC,GAAI,CAAC,EAAGJ,UAAU,CAACK,MAAM,GAAG,CAAC,GAAI,CAAC,CAAC,EAAE,CAAC,CAAC;cACtJhB,SAAS,CAACY,MAAM,CAACwC,KAAK,EAAE;cAACiB,QAAA,CAAAE,IAAA;cAAA,OACnB,IAAI,CAACC,MAAM,CAACb,KAAK,CAAC;YAAA;cACxB,IAAI,IAAI,CAACnD,SAAS,EAAE;gBAChB,IAAI,CAACH,MAAM,CAACoE,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;kBAAA,OAAKA,CAAC,CAACpC,QAAQ,CAACqC,CAAC,GAAGF,CAAC,CAACnC,QAAQ,CAACqC,CAAC,IAAIF,CAAC,CAACG,EAAE,GAAGF,CAAC,CAACE,EAAE;gBAAA,EAAC;gBACtE,IAAI,CAACpE,UAAU,GAAG,IAAI,CAACJ,MAAM,CAAC,IAAI,CAACA,MAAM,CAACoB,MAAM,GAAG,CAAC,CAAC,CAACc,QAAQ,CAACqC,CAAC;gBAChE,IAAI,CAACpE,SAAS,GAAG,KAAK;cAC1B;cAACoD,UAAA,GAAA7B,0BAAA,CACwB/B,SAAS,CAACkB,OAAO;cAAA;gBAA1C,KAAA0C,UAAA,CAAA1B,CAAA,MAAA2B,MAAA,GAAAD,UAAA,CAAAzB,CAAA,IAAAC,IAAA,GAA4C;kBAAA0B,YAAA,GAAAgB,cAAA,CAAAjB,MAAA,CAAAnC,KAAA,MAA9BqC,MAAM,GAAAD,YAAA;kBAChB9D,SAAS,CAACY,MAAM,CAACmE,UAAU,CAAChB,MAAM,EAAEJ,KAAK,CAAC;gBAC9C;cAAC,SAAAnB,GAAA;gBAAAoB,UAAA,CAAAnB,CAAA,CAAAD,GAAA;cAAA;gBAAAoB,UAAA,CAAAlB,CAAA;cAAA;cAAAsB,UAAA,GAAAjC,0BAAA,CACe,IAAI,CAAC1B,MAAM;cAAA;gBAA3B,KAAA2D,UAAA,CAAA9B,CAAA,MAAA+B,MAAA,GAAAD,UAAA,CAAA7B,CAAA,IAAAC,IAAA,GAA6B;kBAAlB8B,CAAC,GAAAD,MAAA,CAAAvC,KAAA;kBACRwC,CAAC,CAACc,IAAI,CAACrB,KAAK,CAAC;gBACjB;cAAC,SAAAnB,GAAA;gBAAAwB,UAAA,CAAAvB,CAAA,CAAAD,GAAA;cAAA;gBAAAwB,UAAA,CAAAtB,CAAA;cAAA;YAAA;YAAA;cAAA,OAAA2B,QAAA,CAAAY,IAAA;UAAA;QAAA,GAAAvB,OAAA;MAAA,CACJ;MAAA,SAAAsB,KAAAE,EAAA;QAAA,OAAA5B,KAAA,CAAA6B,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAJ,IAAA;IAAA;EAAA;IAAAzD,GAAA;IAAAG,KAAA,EACD,SAAA2D,gBAAgBC,IAAI,EAAE;MAClB,IAAI,CAAC5E,kBAAkB,CAAC2E,eAAe,CAACC,IAAI,CAAC;IACjD;EAAC;IAAA/D,GAAA;IAAAG,KAAA,EACD,SAAA6D,KAAA,EAAO;MACH,IAAIC,EAAE;MACN,IAAMxF,SAAS,GAAG,IAAI,CAACA,SAAS;QAAE4B,OAAO,GAAG5B,SAAS,CAAC6B,aAAa;MACnE,IAAI,CAACpB,UAAU,GAAG,CAAC;MACnB,IAAI,CAACD,SAAS,GAAG,KAAK;MACtB,IAAIiF,OAAO,GAAG,KAAK;MACnB,IAAI,CAACrE,QAAQ,GAAG,IAAI,CAAClB,OAAO,CAACgB,OAAO,CAACG,WAAW,CAACrB,SAAS,EAAE,IAAI,CAAC;MACjE,IAAI,CAACU,kBAAkB,CAAC6E,IAAI,EAAE;MAAC,IAAAG,UAAA,GAAA3D,0BAAA,CACN/B,SAAS,CAACkB,OAAO;QAAAyE,MAAA;MAAA;QAA1C,KAAAD,UAAA,CAAAxD,CAAA,MAAAyD,MAAA,GAAAD,UAAA,CAAAvD,CAAA,IAAAC,IAAA,GAA4C;UAAA,IAAAwD,YAAA,GAAAd,cAAA,CAAAa,MAAA,CAAAjE,KAAA;YAA9BqC,MAAM,GAAA6B,YAAA;UAChB,IAAI7B,MAAM,CAAC8B,uBAAuB,KAAKC,SAAS,EAAE;YAC9CL,OAAO,GAAG1B,MAAM,CAAC8B,uBAAuB,EAAE;UAC9C;UACA,IAAIJ,OAAO,EAAE;YACT;UACJ;QACJ;MAAC,SAAAjD,GAAA;QAAAkD,UAAA,CAAAjD,CAAA,CAAAD,GAAA;MAAA;QAAAkD,UAAA,CAAAhD,CAAA;MAAA;MACD,IAAI,CAAChC,kBAAkB,CAAC6E,IAAI,EAAE;MAAC,IAAAQ,UAAA,GAAAhE,0BAAA,CACC/B,SAAS,CAACgG,cAAc;QAAAC,MAAA;MAAA;QAAxD,KAAAF,UAAA,CAAA7D,CAAA,MAAA+D,MAAA,GAAAF,UAAA,CAAA5D,CAAA,IAAAC,IAAA,GAA0D;UAAA,IAAA8D,YAAA,GAAApB,cAAA,CAAAmB,MAAA,CAAAvE,KAAA;YAA5CyE,aAAa,GAAAD,YAAA;UACvBC,aAAa,CAACZ,IAAI,CAACvF,SAAS,CAAC;QACjC;MAAC,SAAAwC,GAAA;QAAAuD,UAAA,CAAAtD,CAAA,CAAAD,GAAA;MAAA;QAAAuD,UAAA,CAAArD,CAAA;MAAA;MACD,IAAI,CAACf,kBAAkB,EAAE;MACzB,IAAI,CAAC8D,OAAO,EAAE;QACV,KAAK,IAAM7C,KAAK,IAAIhB,OAAO,CAACkB,SAAS,CAACsD,MAAM,EAAE;UAC1C,IAAMC,YAAY,GAAGzE,OAAO,CAACkB,SAAS,CAACsD,MAAM,CAACxD,KAAK,CAAC;UACpD,KAAK,IAAI0D,CAAC,GAAG,IAAI,CAACrD,KAAK,EAAEsD,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAACf,EAAE,GAAGa,YAAY,CAACtD,MAAM,MAAM,IAAI,IAAIyC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC9D,KAAK,CAAC,IAAI4E,CAAC,GAAG1E,OAAO,CAACkB,SAAS,CAACC,MAAM,CAACrB,KAAK,EAAE4E,CAAC,EAAE,EAAEC,CAAC,EAAE,EAAE;YAC5J,IAAI,CAACjE,WAAW,CAACwD,SAAS,EAAEO,YAAY,EAAEzD,KAAK,CAAC;UACpD;QACJ;QACA,KAAK,IAAI0D,EAAC,GAAG,IAAI,CAACrD,KAAK,EAAEqD,EAAC,GAAG1E,OAAO,CAACkB,SAAS,CAACC,MAAM,CAACrB,KAAK,EAAE4E,EAAC,EAAE,EAAE;UAC9D,IAAI,CAAChE,WAAW,EAAE;QACtB;MACJ;IACJ;EAAC;IAAAf,GAAA;IAAAG,KAAA,EACD,SAAA8E,KAAKC,EAAE,EAAEC,KAAK,EAAE/D,eAAe,EAAEC,KAAK,EAAE;MACpC,IAAI,CAAC+D,OAAO,GAAG,IAAI;MACnB,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,EAAE,EAAEH,CAAC,EAAE,EAAE;QACzB,IAAI,CAAChE,WAAW,CAACoE,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,KAAK,CAACnE,QAAQ,EAAEI,eAAe,EAAEC,KAAK,CAAC;MAC1G;MACA,IAAI,CAAC+D,OAAO,GAAG,KAAK;IACxB;EAAC;IAAApF,GAAA;IAAAG,KAAA;MAAA,IAAAkF,OAAA,GAAArD,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CACD,SAAAoD,SAAA;QAAA,OAAArD,mBAAA,GAAAW,IAAA,UAAA2C,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAzC,IAAA,GAAAyC,SAAA,CAAAxC,IAAA;YAAA;cACI,IAAI,CAACnB,KAAK,EAAE;cACZ,IAAI,CAACmC,IAAI,EAAE;cAACwB,SAAA,CAAAxC,IAAA;cAAA,OACN,IAAI,CAACS,IAAI,CAAC;gBAAEtD,KAAK,EAAE,CAAC;gBAAEsF,MAAM,EAAE;cAAE,CAAC,CAAC;YAAA;YAAA;cAAA,OAAAD,SAAA,CAAA9B,IAAA;UAAA;QAAA,GAAA4B,QAAA;MAAA,CAC3C;MAAA,SAAAI,OAAA;QAAA,OAAAL,OAAA,CAAAzB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAA6B,MAAA;IAAA;EAAA;IAAA1F,GAAA;IAAAG,KAAA,EACD,SAAAwF,OAAO7E,QAAQ,EAAEO,KAAK,EAAEuE,QAAQ,EAAE;MAC9B,IAAI,CAACC,QAAQ,CAAC,IAAI,CAAChH,KAAK,CAACiH,OAAO,CAAChF,QAAQ,CAAC,EAAEyD,SAAS,EAAElD,KAAK,EAAEuE,QAAQ,CAAC;IAC3E;EAAC;IAAA5F,GAAA;IAAAG,KAAA,EACD,SAAA0F,SAASE,KAAK,EAAiC;MAAA,IAA/BC,QAAQ,GAAAnC,SAAA,CAAA3D,MAAA,QAAA2D,SAAA,QAAAU,SAAA,GAAAV,SAAA,MAAG,CAAC;MAAA,IAAExC,KAAK,GAAAwC,SAAA,CAAA3D,MAAA,OAAA2D,SAAA,MAAAU,SAAA;MAAA,IAAEqB,QAAQ,GAAA/B,SAAA,CAAA3D,MAAA,OAAA2D,SAAA,MAAAU,SAAA;MACzC,IAAIwB,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAG,IAAI,CAACrE,KAAK,EAAE;QACjC;MACJ;MACA,IAAIuE,OAAO,GAAG,CAAC;MACf,KAAK,IAAIlB,CAAC,GAAGgB,KAAK,EAAEE,OAAO,GAAGD,QAAQ,IAAIjB,CAAC,GAAG,IAAI,CAACrD,KAAK,EAAEqD,CAAC,EAAE,EAAE;QAC3D,IAAMjE,QAAQ,GAAG,IAAI,CAACjC,KAAK,CAACkG,CAAC,CAAC;QAC9B,IAAI,CAACjE,QAAQ,IAAIA,QAAQ,CAACO,KAAK,KAAKA,KAAK,EAAE;UACvC;QACJ;QACAP,QAAQ,CAACgB,OAAO,CAAC8D,QAAQ,CAAC;QAC1B,IAAI,CAAC/G,KAAK,CAACqH,MAAM,CAACnB,CAAC,EAAE,EAAE,CAAC,CAAC;QACzB,IAAMoB,IAAI,GAAG,IAAI,CAACrH,MAAM,CAACgH,OAAO,CAAChF,QAAQ,CAAC;QAC1C,IAAI,CAAChC,MAAM,CAACoH,MAAM,CAACC,IAAI,EAAE,CAAC,CAAC;QAC3B,IAAI,CAACpH,IAAI,CAACkG,IAAI,CAACnE,QAAQ,CAAC;QACxBmF,OAAO,EAAE;QACT,IAAI,CAACtH,OAAO,CAACyH,aAAa,CAAC,iBAAiB,EAAE;UAC1C3H,SAAS,EAAE,IAAI,CAACA,SAAS;UACzB4H,IAAI,EAAE;YACFvF,QAAQ,EAARA;UACJ;QACJ,CAAC,CAAC;MACN;IACJ;EAAC;IAAAd,GAAA;IAAAG,KAAA,EACD,SAAAwB,eAAeqE,QAAQ,EAAE3E,KAAK,EAAE;MAC5B,IAAI,CAACwE,QAAQ,CAAC,CAAC,EAAEG,QAAQ,EAAE3E,KAAK,CAAC;IACrC;EAAC;IAAArB,GAAA;IAAAG,KAAA,EACD,SAAAmG,WAAA,EAAa;MACT,IAAMjG,OAAO,GAAG,IAAI,CAAC5B,SAAS,CAAC6B,aAAa;MAC5C,KAAK,IAAMe,KAAK,IAAIhB,OAAO,CAACkB,SAAS,CAACsD,MAAM,EAAE;QAC1C,IAAI,CAAC0B,aAAa,CAAClG,OAAO,CAACkB,SAAS,CAACsD,MAAM,CAACxD,KAAK,CAAC,EAAE,CAAC,EAAEA,KAAK,CAAC;MACjE;MACA,IAAI,CAACkF,aAAa,CAAClG,OAAO,CAACkB,SAAS,EAAElB,OAAO,CAACI,eAAe,CAACP,MAAM,CAAC;IACzE;EAAC;IAAAF,GAAA;IAAAG,KAAA;MAAA,IAAAqG,OAAA,GAAAxE,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CACD,SAAAuE,SAAarE,KAAK;QAAA,IAAA6B,EAAA,EAAAyC,EAAA,EAAAjI,SAAA,EAAAkI,iBAAA,EAAAC,UAAA,EAAAC,MAAA,EAAAC,YAAA,EAAAlC,aAAA,EAAAmC,UAAA,EAAAC,MAAA,EAAAC,YAAA,EAAAzE,MAAA,EAAA0E,UAAA,EAAAC,MAAA,EAAAC,SAAA,EAAAC,YAAA,EAAAC,WAAA,EAAAC,OAAA,EAAAC,aAAA,EAAAC,OAAA,EAAAC,WAAA,EAAAC,OAAA,EAAAC,KAAA,EAAAC,GAAA,EAAAC,kBAAA,EAAAhH,QAAA,EAAAiH,UAAA,EAAAC,MAAA,EAAAC,UAAA,EAAAC,WAAA,EAAAC,OAAA,EAAAC,OAAA;QAAA,OAAAnG,mBAAA,GAAAW,IAAA,UAAAyF,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAvF,IAAA,GAAAuF,SAAA,CAAAtF,IAAA;YAAA;cAERvE,SAAS,GAAG,IAAI,CAACA,SAAS,EAAEkI,iBAAiB,GAAG,EAAE;cAAAC,UAAA,GAAApG,0BAAA,CACxB/B,SAAS,CAACgG,cAAc;cAAA;gBAAxD,KAAAmC,UAAA,CAAAjG,CAAA,MAAAkG,MAAA,GAAAD,UAAA,CAAAhG,CAAA,IAAAC,IAAA,GAA0D;kBAAAiG,YAAA,GAAAvD,cAAA,CAAAsD,MAAA,CAAA1G,KAAA,MAA5CyE,aAAa,GAAAkC,YAAA;kBACvBlC,aAAa,CAAC3B,MAAM,EAAE;gBAC1B;cAAC,SAAAhC,GAAA;gBAAA2F,UAAA,CAAA1F,CAAA,CAAAD,GAAA;cAAA;gBAAA2F,UAAA,CAAAzF,CAAA;cAAA;cAAA4F,UAAA,GAAAvG,0BAAA,CACwB/B,SAAS,CAACkB,OAAO;cAAA;gBAA1C,KAAAoH,UAAA,CAAApG,CAAA,MAAAqG,MAAA,GAAAD,UAAA,CAAAnG,CAAA,IAAAC,IAAA,GAA4C;kBAAAoG,YAAA,GAAA1D,cAAA,CAAAyD,MAAA,CAAA7G,KAAA,MAA9BqC,MAAM,GAAAyE,YAAA;kBAChB,CAAChD,EAAE,GAAGzB,MAAM,CAACS,MAAM,MAAM,IAAI,IAAIgB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACsE,IAAI,CAAC/F,MAAM,EAAEJ,KAAK,CAAC;gBACpF;cAAC,SAAAnB,GAAA;gBAAA8F,UAAA,CAAA7F,CAAA,CAAAD,GAAA;cAAA;gBAAA8F,UAAA,CAAA5F,CAAA;cAAA;cAAA+F,UAAA,GAAA1G,0BAAA,CACsB,IAAI,CAAC3B,KAAK;cAAAyJ,SAAA,CAAAvF,IAAA;cAAAmE,UAAA,CAAAvG,CAAA;YAAA;cAAA,KAAAwG,MAAA,GAAAD,UAAA,CAAAtG,CAAA,IAAAC,IAAA;gBAAAyH,SAAA,CAAAtF,IAAA;gBAAA;cAAA;cAAtBlC,SAAQ,GAAAqG,MAAA,CAAAhH,KAAA;cACTkH,YAAY,GAAG5I,SAAS,CAACY,MAAM,CAACgI,YAAY;cAClD,IAAIA,YAAY,IAAI,CAACvG,SAAQ,CAAC0H,kBAAkB,EAAE;gBAC9C1H,SAAQ,CAACE,QAAQ,CAACyH,CAAC,IAAIpB,YAAY,CAAC7H,KAAK;gBACzCsB,SAAQ,CAACE,QAAQ,CAAC0H,CAAC,IAAIrB,YAAY,CAAC5H,MAAM;gBAC1CqB,SAAQ,CAAC6H,eAAe,CAACF,CAAC,IAAIpB,YAAY,CAAC7H,KAAK;gBAChDsB,SAAQ,CAAC6H,eAAe,CAACD,CAAC,IAAIrB,YAAY,CAAC5H,MAAM;cACrD;cACAqB,SAAQ,CAAC0H,kBAAkB,GAAG,KAAK;cAACF,SAAA,CAAAtF,IAAA;cAAA,OAC9B,IAAI,CAAC7D,kBAAkB,CAACyJ,KAAK,CAAC9H,SAAQ,CAAC;YAAA;cAAAwG,WAAA,GAAA9G,0BAAA,CACpB,IAAI,CAAC/B,SAAS,CAACkB,OAAO;cAAA2I,SAAA,CAAAvF,IAAA;cAAAuE,WAAA,CAAA3G,CAAA;YAAA;cAAA,KAAA4G,OAAA,GAAAD,WAAA,CAAA1G,CAAA,IAAAC,IAAA;gBAAAyH,SAAA,CAAAtF,IAAA;gBAAA;cAAA;cAAAwE,aAAA,GAAAjE,cAAA,CAAAgE,OAAA,CAAApH,KAAA,MAAjCqC,OAAM,GAAAgF,aAAA;cAAA,KACZ1G,SAAQ,CAAC+H,SAAS;gBAAAP,SAAA,CAAAtF,IAAA;gBAAA;cAAA;cAAA,OAAAsF,SAAA,CAAAQ,MAAA;YAAA;cAGtB,CAACpC,EAAE,GAAGlE,OAAM,CAACuG,cAAc,MAAM,IAAI,IAAIrC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC6B,IAAI,CAAC/F,OAAM,EAAE1B,SAAQ,EAAEsB,KAAK,CAAC;YAAC;cAAAkG,SAAA,CAAAtF,IAAA;cAAA;YAAA;cAAAsF,SAAA,CAAAtF,IAAA;cAAA;YAAA;cAAAsF,SAAA,CAAAvF,IAAA;cAAAuF,SAAA,CAAAU,EAAA,GAAAV,SAAA;cAAAhB,WAAA,CAAApG,CAAA,CAAAoH,SAAA,CAAAU,EAAA;YAAA;cAAAV,SAAA,CAAAvF,IAAA;cAAAuE,WAAA,CAAAnG,CAAA;cAAA,OAAAmH,SAAA,CAAAW,MAAA;YAAA;cAAAvB,WAAA,GAAAlH,0BAAA,CAEnF,IAAI,CAACd,MAAM;cAAA;gBAA/B,KAAAgI,WAAA,CAAA/G,CAAA,MAAAgH,OAAA,GAAAD,WAAA,CAAA9G,CAAA,IAAAC,IAAA,GAAiC;kBAAtB+G,KAAK,GAAAD,OAAA,CAAAxH,KAAA;kBACZ,IAAIyH,KAAK,CAACsB,SAAS,CAACpI,SAAQ,CAAC,EAAE;oBAC3B8G,KAAK,CAACuB,IAAI,CAACrI,SAAQ,EAAEsB,KAAK,CAAC;kBAC/B;gBACJ;cAAC,SAAAnB,GAAA;gBAAAyG,WAAA,CAAAxG,CAAA,CAAAD,GAAA;cAAA;gBAAAyG,WAAA,CAAAvG,CAAA;cAAA;cAAA,KACGL,SAAQ,CAAC+H,SAAS;gBAAAP,SAAA,CAAAtF,IAAA;gBAAA;cAAA;cAClB2D,iBAAiB,CAAC1B,IAAI,CAACnE,SAAQ,CAAC;cAAC,OAAAwH,SAAA,CAAAQ,MAAA;YAAA;cAGrC,IAAI,CAACvJ,QAAQ,CAAC6J,MAAM,CAAC,IAAIjL,KAAK,CAAC2C,SAAQ,CAACuI,WAAW,EAAE,EAAEvI,SAAQ,CAAC,CAAC;YAAC;cAAAwH,SAAA,CAAAtF,IAAA;cAAA;YAAA;cAAAsF,SAAA,CAAAtF,IAAA;cAAA;YAAA;cAAAsF,SAAA,CAAAvF,IAAA;cAAAuF,SAAA,CAAAgB,EAAA,GAAAhB,SAAA;cAAApB,UAAA,CAAAhG,CAAA,CAAAoH,SAAA,CAAAgB,EAAA;YAAA;cAAAhB,SAAA,CAAAvF,IAAA;cAAAmE,UAAA,CAAA/F,CAAA;cAAA,OAAAmH,SAAA,CAAAW,MAAA;YAAA;cAEtE,KAAApB,GAAA,MAAAC,kBAAA,GAAuBnB,iBAAiB,EAAAkB,GAAA,GAAAC,kBAAA,CAAA5H,MAAA,EAAA2H,GAAA,IAAE;gBAA/B/G,QAAQ,GAAAgH,kBAAA,CAAAD,GAAA;gBACf,IAAI,CAAClC,MAAM,CAAC7E,QAAQ,CAAC;cACzB;cAACwH,SAAA,CAAAtF,IAAA;cAAA,OACK,IAAI,CAAC7D,kBAAkB,CAACoK,gBAAgB,CAACnH,KAAK,CAAC;YAAA;cAAA2F,UAAA,GAAAvH,0BAAA,CAC9B,IAAI,CAAC3B,KAAK;cAAAyJ,SAAA,CAAAvF,IAAA;cAAAgF,UAAA,CAAApH,CAAA;YAAA;cAAA,KAAAqH,MAAA,GAAAD,UAAA,CAAAnH,CAAA,IAAAC,IAAA;gBAAAyH,SAAA,CAAAtF,IAAA;gBAAA;cAAA;cAAtBlC,UAAQ,GAAAkH,MAAA,CAAA7H,KAAA;cAAA+H,WAAA,GAAA1H,0BAAA,CACO,IAAI,CAACX,QAAQ;cAAA;gBAAnC,KAAAqI,WAAA,CAAAvH,CAAA,MAAAwH,OAAA,GAAAD,WAAA,CAAAtH,CAAA,IAAAC,IAAA,GAAqC;kBAA1BuH,OAAO,GAAAD,OAAA,CAAAhI,KAAA;kBACdiI,OAAO,CAACnF,MAAM,CAACnC,UAAQ,EAAEsB,KAAK,CAAC;gBACnC;cAAC,SAAAnB,GAAA;gBAAAiH,WAAA,CAAAhH,CAAA,CAAAD,GAAA;cAAA;gBAAAiH,WAAA,CAAA/G,CAAA;cAAA;cAAA,MACG,CAACL,UAAQ,CAAC+H,SAAS,IAAI,CAAC/H,UAAQ,CAAC0I,QAAQ;gBAAAlB,SAAA,CAAAtF,IAAA;gBAAA;cAAA;cAAAsF,SAAA,CAAAtF,IAAA;cAAA,OACnC,IAAI,CAAC7D,kBAAkB,CAACsK,iBAAiB,CAAC3I,UAAQ,EAAEsB,KAAK,CAAC;YAAA;cAAAkG,SAAA,CAAAtF,IAAA;cAAA;YAAA;cAAAsF,SAAA,CAAAtF,IAAA;cAAA;YAAA;cAAAsF,SAAA,CAAAvF,IAAA;cAAAuF,SAAA,CAAAoB,EAAA,GAAApB,SAAA;cAAAP,UAAA,CAAA7G,CAAA,CAAAoH,SAAA,CAAAoB,EAAA;YAAA;cAAApB,SAAA,CAAAvF,IAAA;cAAAgF,UAAA,CAAA5G,CAAA;cAAA,OAAAmH,SAAA,CAAAW,MAAA;YAAA;cAGxE,OAAOxK,SAAS,CAACY,MAAM,CAACgI,YAAY;YAAC;YAAA;cAAA,OAAAiB,SAAA,CAAA5E,IAAA;UAAA;QAAA,GAAA+C,QAAA;MAAA,CACxC;MAAA,SAAAxD,OAAA0G,GAAA;QAAA,OAAAnD,OAAA,CAAA5C,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAZ,MAAA;IAAA;EAAA;IAAAjD,GAAA;IAAAG,KAAA,EACD,SAAAoG,cAAclG,OAAO,EAAEuJ,WAAW,EAAEvI,KAAK,EAAE;MACvC,IAAI4C,EAAE;MACN,IAAI,EAAE,CAACA,EAAE,GAAG5D,OAAO,CAACmB,MAAM,CAACqI,OAAO,MAAM,IAAI,IAAI5F,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC6F,MAAM,CAAC,EAAE;QACjF;MACJ;MACA,IAAMC,aAAa,GAAG1J,OAAO,CAACmB,MAAM;QAAEwI,aAAa,GAAG,IAAI,CAACC,kBAAkB,CAACF,aAAa,CAACF,OAAO,CAAC;QAAEK,kBAAkB,GAAGH,aAAa,CAAC5J,KAAK;QAAEgK,iBAAiB,GAAGJ,aAAa,CAAC/K,KAAK,GAAG,CAAC,GAAG+K,aAAa,CAAC/K,KAAK,GAAGkL,kBAAkB;QAAEE,eAAe,GAAGC,IAAI,CAACC,GAAG,CAACJ,kBAAkB,EAAEC,iBAAiB,CAAC,GAAGH,aAAa,GAAGJ,WAAW;QAAEW,cAAc,GAAGF,IAAI,CAACC,GAAG,CAAC,IAAI,CAAC5I,KAAK,EAAE,IAAI,CAAC7C,KAAK,CAAC2L,MAAM,CAAC,UAACC,CAAC;UAAA,OAAKA,CAAC,CAACpJ,KAAK,KAAKA,KAAK;QAAA,EAAC,CAACnB,MAAM,CAAC;MACla,IAAI,CAAClB,KAAK,GAAG+K,aAAa,CAAC/K,KAAK,GAAGgL,aAAa;MAChD,IAAIO,cAAc,GAAGH,eAAe,EAAE;QAClC,IAAI,CAACnF,IAAI,CAACoF,IAAI,CAACK,GAAG,CAACN,eAAe,GAAGG,cAAc,CAAC,EAAEhG,SAAS,EAAElE,OAAO,EAAEgB,KAAK,CAAC;MACpF,CAAC,MACI,IAAIkJ,cAAc,GAAGH,eAAe,EAAE;QACvC,IAAI,CAACzI,cAAc,CAAC4I,cAAc,GAAGH,eAAe,EAAE/I,KAAK,CAAC;MAChE;IACJ;EAAC;IAAArB,GAAA;IAAAG,KAAA,EACD,SAAA8J,mBAAmBU,cAAc,EAAE;MAC/B,IAAMlM,SAAS,GAAG,IAAI,CAACA,SAAS;MAChC,IAAI,CAACA,SAAS,CAACY,MAAM,CAACuL,OAAO,IAAI,CAACD,cAAc,CAACb,MAAM,EAAE;QACrD,OAAO,CAAC;MACZ;MACA,IAAMzK,MAAM,GAAGZ,SAAS,CAACY,MAAM,CAACuL,OAAO;QAAEC,OAAO,GAAGpM,SAAS,CAACqM,MAAM,CAACC,UAAU;MAC9E,OAAQ1L,MAAM,CAACG,KAAK,GAAGH,MAAM,CAACI,MAAM,IAAKkL,cAAc,CAAClF,MAAM,GAAA4E,IAAA,CAAAW,GAAA,CAAGH,OAAO,EAAI,CAAC,IAAGF,cAAc,CAACM,IAAI,CAAC;IACxG;EAAC;IAAAjL,GAAA;IAAAG,KAAA,EACD,SAAAyB,cAAcZ,QAAQ,EAAEI,eAAe,EAAEC,KAAK,EAAEC,WAAW,EAAE;MACzD,IAAI;QACA,IAAIR,QAAQ,GAAG,IAAI,CAAC/B,IAAI,CAACmM,GAAG,EAAE;QAC9B,IAAIpK,QAAQ,EAAE;UACVA,QAAQ,CAACkD,IAAI,CAAC,IAAI,CAACpF,MAAM,EAAEoC,QAAQ,EAAEI,eAAe,EAAEC,KAAK,CAAC;QAChE,CAAC,MACI;UACDP,QAAQ,GAAG,IAAI5C,QAAQ,CAAC,IAAI,CAACS,OAAO,EAAE,IAAI,CAACC,MAAM,EAAE,IAAI,CAACH,SAAS,EAAEuC,QAAQ,EAAEI,eAAe,EAAEC,KAAK,CAAC;QACxG;QACA,IAAI8J,MAAM,GAAG,IAAI;QACjB,IAAI7J,WAAW,EAAE;UACb6J,MAAM,GAAG7J,WAAW,CAACR,QAAQ,CAAC;QAClC;QACA,IAAI,CAACqK,MAAM,EAAE;UACT;QACJ;QACA,IAAI,CAACtM,KAAK,CAACoG,IAAI,CAACnE,QAAQ,CAAC;QACzB,IAAI,CAAChC,MAAM,CAACmG,IAAI,CAACnE,QAAQ,CAAC;QAC1B,IAAI,CAAClC,MAAM,EAAE;QACb,IAAI,CAACD,OAAO,CAACyH,aAAa,CAAC,eAAe,EAAE;UACxC3H,SAAS,EAAE,IAAI,CAACA,SAAS;UACzB4H,IAAI,EAAE;YACFvF,QAAQ,EAARA;UACJ;QACJ,CAAC,CAAC;QACF,OAAOA,QAAQ;MACnB,CAAC,CACD,OAAOI,CAAC,EAAE;QACNkK,OAAO,CAACC,IAAI,2BAAAC,MAAA,CAA2BpK,CAAC,EAAG;QAC3C;MACJ;IACJ;EAAC;EAAA,OAAA3C,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}