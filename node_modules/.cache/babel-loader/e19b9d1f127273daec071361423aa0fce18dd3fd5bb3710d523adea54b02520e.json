{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Polymorph\\\\Desktop\\\\face_recognizer\\\\face_recognition_app\\\\src\\\\componenets\\\\ParticleComponent\\\\ParticleComponent.js\",\n  _s = $RefreshSig$();\nimport { useCallback } from \"react\";\nimport { loadFull } from \"tsparticles\";\nimport Particles from \"react-tsparticles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Particle = () => {\n  _s();\n  const particlesInit = useCallback(async engine => {\n    console.log(engine);\n    // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n    // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n    // starting from v2 you can add only the features you need reducing the bundle size\n    await loadFull(engine);\n  }, []);\n  const particlesLoaded = useCallback(async container => {\n    await console.log(container);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    id: \"tsparticles\",\n    init: particlesInit,\n    loaded: particlesLoaded,\n    options: {\n      background: {\n        color: {\n          value: \"#0d47a1\"\n        }\n      },\n      fpsLimit: 120,\n      interactivity: {\n        events: {\n          onClick: {\n            enable: true,\n            mode: \"push\"\n          },\n          onHover: {\n            enable: true,\n            mode: \"repulse\"\n          },\n          resize: true\n        },\n        modes: {\n          push: {\n            quantity: 4\n          },\n          repulse: {\n            distance: 200,\n            duration: 0.4\n          }\n        }\n      },\n      particles: {\n        color: {\n          value: \"#ffffff\"\n        },\n        links: {\n          color: \"#ffffff\",\n          distance: 150,\n          enable: true,\n          opacity: 0.5,\n          width: 1\n        },\n        collisions: {\n          enable: true\n        },\n        move: {\n          directions: \"none\",\n          enable: true,\n          outModes: {\n            default: \"bounce\"\n          },\n          random: false,\n          speed: 6,\n          straight: false\n        },\n        number: {\n          density: {\n            enable: true,\n            area: 800\n          },\n          value: 80\n        },\n        opacity: {\n          value: 0.5\n        },\n        shape: {\n          type: \"circle\"\n        },\n        size: {\n          value: {\n            min: 1,\n            max: 5\n          }\n        }\n      },\n      detectRetina: true\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(Particle, \"PjleD03JXt5mR6AE5+SxrsWvXBc=\");\n_c = Particle;\nexport default Particle;\nvar _c;\n$RefreshReg$(_c, \"Particle\");","map":{"version":3,"names":["useCallback","loadFull","Particles","jsxDEV","_jsxDEV","Particle","_s","particlesInit","engine","console","log","particlesLoaded","container","id","init","loaded","options","background","color","value","fpsLimit","interactivity","events","onClick","enable","mode","onHover","resize","modes","push","quantity","repulse","distance","duration","particles","links","opacity","width","collisions","move","directions","outModes","default","random","speed","straight","number","density","area","shape","type","size","min","max","detectRetina","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/src/componenets/ParticleComponent/ParticleComponent.js"],"sourcesContent":["import { useCallback } from \"react\";\r\nimport { loadFull } from \"tsparticles\";\r\nimport Particles from \"react-tsparticles\";\r\n\r\nconst Particle = () => {\r\n    const particlesInit = useCallback(async engine => {\r\n        console.log(engine);\r\n        // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\r\n        // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\r\n        // starting from v2 you can add only the features you need reducing the bundle size\r\n        await loadFull(engine);\r\n    }, []);\r\n\r\n    const particlesLoaded = useCallback(async container => {\r\n        await console.log(container);\r\n    }, []);\r\n    return (\r\n        <Particles\r\n            id=\"tsparticles\"\r\n            init={particlesInit}\r\n            loaded={particlesLoaded}\r\n            options={{\r\n                background: {\r\n                    color: {\r\n                        value: \"#0d47a1\",\r\n                    },\r\n                },\r\n                fpsLimit: 120,\r\n                interactivity: {\r\n                    events: {\r\n                        onClick: {\r\n                            enable: true,\r\n                            mode: \"push\",\r\n                        },\r\n                        onHover: {\r\n                            enable: true,\r\n                            mode: \"repulse\",\r\n                        },\r\n                        resize: true,\r\n                    },\r\n                    modes: {\r\n                        push: {\r\n                            quantity: 4,\r\n                        },\r\n                        repulse: {\r\n                            distance: 200,\r\n                            duration: 0.4,\r\n                        },\r\n                    },\r\n                },\r\n                particles: {\r\n                    color: {\r\n                        value: \"#ffffff\",\r\n                    },\r\n                    links: {\r\n                        color: \"#ffffff\",\r\n                        distance: 150,\r\n                        enable: true,\r\n                        opacity: 0.5,\r\n                        width: 1,\r\n                    },\r\n                    collisions: {\r\n                        enable: true,\r\n                    },\r\n                    move: {\r\n                        directions: \"none\",\r\n                        enable: true,\r\n                        outModes: {\r\n                            default: \"bounce\",\r\n                        },\r\n                        random: false,\r\n                        speed: 6,\r\n                        straight: false,\r\n                    },\r\n                    number: {\r\n                        density: {\r\n                            enable: true,\r\n                            area: 800,\r\n                        },\r\n                        value: 80,\r\n                    },\r\n                    opacity: {\r\n                        value: 0.5,\r\n                    },\r\n                    shape: {\r\n                        type: \"circle\",\r\n                    },\r\n                    size: {\r\n                        value: { min: 1, max: 5 },\r\n                    },\r\n                },\r\n                detectRetina: true,\r\n            }}\r\n        />\r\n    );\r\n}\r\nexport default Particle;"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,SAAS,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,aAAa,GAAGP,WAAW,CAAC,MAAMQ,MAAM,IAAI;IAC9CC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB;IACA;IACA;IACA,MAAMP,QAAQ,CAACO,MAAM,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,eAAe,GAAGX,WAAW,CAAC,MAAMY,SAAS,IAAI;IACnD,MAAMH,OAAO,CAACC,GAAG,CAACE,SAAS,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EACN,oBACIR,OAAA,CAACF,SAAS;IACNW,EAAE,EAAC,aAAa;IAChBC,IAAI,EAAEP,aAAc;IACpBQ,MAAM,EAAEJ,eAAgB;IACxBK,OAAO,EAAE;MACLC,UAAU,EAAE;QACRC,KAAK,EAAE;UACHC,KAAK,EAAE;QACX;MACJ,CAAC;MACDC,QAAQ,EAAE,GAAG;MACbC,aAAa,EAAE;QACXC,MAAM,EAAE;UACJC,OAAO,EAAE;YACLC,MAAM,EAAE,IAAI;YACZC,IAAI,EAAE;UACV,CAAC;UACDC,OAAO,EAAE;YACLF,MAAM,EAAE,IAAI;YACZC,IAAI,EAAE;UACV,CAAC;UACDE,MAAM,EAAE;QACZ,CAAC;QACDC,KAAK,EAAE;UACHC,IAAI,EAAE;YACFC,QAAQ,EAAE;UACd,CAAC;UACDC,OAAO,EAAE;YACLC,QAAQ,EAAE,GAAG;YACbC,QAAQ,EAAE;UACd;QACJ;MACJ,CAAC;MACDC,SAAS,EAAE;QACPhB,KAAK,EAAE;UACHC,KAAK,EAAE;QACX,CAAC;QACDgB,KAAK,EAAE;UACHjB,KAAK,EAAE,SAAS;UAChBc,QAAQ,EAAE,GAAG;UACbR,MAAM,EAAE,IAAI;UACZY,OAAO,EAAE,GAAG;UACZC,KAAK,EAAE;QACX,CAAC;QACDC,UAAU,EAAE;UACRd,MAAM,EAAE;QACZ,CAAC;QACDe,IAAI,EAAE;UACFC,UAAU,EAAE,MAAM;UAClBhB,MAAM,EAAE,IAAI;UACZiB,QAAQ,EAAE;YACNC,OAAO,EAAE;UACb,CAAC;UACDC,MAAM,EAAE,KAAK;UACbC,KAAK,EAAE,CAAC;UACRC,QAAQ,EAAE;QACd,CAAC;QACDC,MAAM,EAAE;UACJC,OAAO,EAAE;YACLvB,MAAM,EAAE,IAAI;YACZwB,IAAI,EAAE;UACV,CAAC;UACD7B,KAAK,EAAE;QACX,CAAC;QACDiB,OAAO,EAAE;UACLjB,KAAK,EAAE;QACX,CAAC;QACD8B,KAAK,EAAE;UACHC,IAAI,EAAE;QACV,CAAC;QACDC,IAAI,EAAE;UACFhC,KAAK,EAAE;YAAEiC,GAAG,EAAE,CAAC;YAAEC,GAAG,EAAE;UAAE;QAC5B;MACJ,CAAC;MACDC,YAAY,EAAE;IAClB;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEV,CAAC;AAAApD,EAAA,CA3FKD,QAAQ;AAAAsD,EAAA,GAARtD,QAAQ;AA4Fd,eAAeA,QAAQ;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}