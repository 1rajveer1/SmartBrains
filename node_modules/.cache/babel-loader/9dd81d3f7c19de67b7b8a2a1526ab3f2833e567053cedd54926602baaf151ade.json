{"ast":null,"code":"import _classCallCheck from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { getRangeValue } from \"tsparticles-engine\";\nexport var PolygonDrawerBase = /*#__PURE__*/function () {\n  function PolygonDrawerBase() {\n    _classCallCheck(this, PolygonDrawerBase);\n  }\n  _createClass(PolygonDrawerBase, [{\n    key: \"draw\",\n    value: function draw(context, particle, radius) {\n      var start = this.getCenter(particle, radius),\n        side = this.getSidesData(particle, radius),\n        sideCount = side.count.numerator * side.count.denominator,\n        decimalSides = side.count.numerator / side.count.denominator,\n        interiorAngleDegrees = 180 * (decimalSides - 2) / decimalSides,\n        interiorAngle = Math.PI - Math.PI * interiorAngleDegrees / 180;\n      if (!context) {\n        return;\n      }\n      context.beginPath();\n      context.translate(start.x, start.y);\n      context.moveTo(0, 0);\n      for (var i = 0; i < sideCount; i++) {\n        context.lineTo(side.length, 0);\n        context.translate(side.length, 0);\n        context.rotate(interiorAngle);\n      }\n    }\n  }, {\n    key: \"getSidesCount\",\n    value: function getSidesCount(particle) {\n      var _a, _b;\n      var polygon = particle.shapeData,\n        sides = Math.round(getRangeValue((_b = (_a = polygon === null || polygon === void 0 ? void 0 : polygon.sides) !== null && _a !== void 0 ? _a : polygon === null || polygon === void 0 ? void 0 : polygon.nb_sides) !== null && _b !== void 0 ? _b : 5));\n      return sides;\n    }\n  }]);\n  return PolygonDrawerBase;\n}();","map":{"version":3,"names":["getRangeValue","PolygonDrawerBase","_classCallCheck","_createClass","key","value","draw","context","particle","radius","start","getCenter","side","getSidesData","sideCount","count","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","Math","PI","beginPath","translate","x","y","moveTo","i","lineTo","length","rotate","getSidesCount","_a","_b","polygon","shapeData","sides","round","nb_sides"],"sources":["C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js"],"sourcesContent":["import { getRangeValue } from \"tsparticles-engine\";\nexport class PolygonDrawerBase {\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius), sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides, interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n    getSidesCount(particle) {\n        var _a, _b;\n        const polygon = particle.shapeData, sides = Math.round(getRangeValue((_b = (_a = polygon === null || polygon === void 0 ? void 0 : polygon.sides) !== null && _a !== void 0 ? _a : polygon === null || polygon === void 0 ? void 0 : polygon.nb_sides) !== null && _b !== void 0 ? _b : 5));\n        return sides;\n    }\n}\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,WAAaC,iBAAiB;EAAA,SAAAA,kBAAA;IAAAC,eAAA,OAAAD,iBAAA;EAAA;EAAAE,YAAA,CAAAF,iBAAA;IAAAG,GAAA;IAAAC,KAAA,EAC1B,SAAAC,KAAKC,OAAO,EAAEC,QAAQ,EAAEC,MAAM,EAAE;MAC5B,IAAMC,KAAK,GAAG,IAAI,CAACC,SAAS,CAACH,QAAQ,EAAEC,MAAM,CAAC;QAAEG,IAAI,GAAG,IAAI,CAACC,YAAY,CAACL,QAAQ,EAAEC,MAAM,CAAC;QAAEK,SAAS,GAAGF,IAAI,CAACG,KAAK,CAACC,SAAS,GAAGJ,IAAI,CAACG,KAAK,CAACE,WAAW;QAAEC,YAAY,GAAGN,IAAI,CAACG,KAAK,CAACC,SAAS,GAAGJ,IAAI,CAACG,KAAK,CAACE,WAAW;QAAEE,oBAAoB,GAAI,GAAG,IAAID,YAAY,GAAG,CAAC,CAAC,GAAIA,YAAY;QAAEE,aAAa,GAAGC,IAAI,CAACC,EAAE,GAAID,IAAI,CAACC,EAAE,GAAGH,oBAAoB,GAAI,GAAG;MACvV,IAAI,CAACZ,OAAO,EAAE;QACV;MACJ;MACAA,OAAO,CAACgB,SAAS,EAAE;MACnBhB,OAAO,CAACiB,SAAS,CAACd,KAAK,CAACe,CAAC,EAAEf,KAAK,CAACgB,CAAC,CAAC;MACnCnB,OAAO,CAACoB,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;MACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGd,SAAS,EAAEc,CAAC,EAAE,EAAE;QAChCrB,OAAO,CAACsB,MAAM,CAACjB,IAAI,CAACkB,MAAM,EAAE,CAAC,CAAC;QAC9BvB,OAAO,CAACiB,SAAS,CAACZ,IAAI,CAACkB,MAAM,EAAE,CAAC,CAAC;QACjCvB,OAAO,CAACwB,MAAM,CAACX,aAAa,CAAC;MACjC;IACJ;EAAC;IAAAhB,GAAA;IAAAC,KAAA,EACD,SAAA2B,cAAcxB,QAAQ,EAAE;MACpB,IAAIyB,EAAE,EAAEC,EAAE;MACV,IAAMC,OAAO,GAAG3B,QAAQ,CAAC4B,SAAS;QAAEC,KAAK,GAAGhB,IAAI,CAACiB,KAAK,CAACtC,aAAa,CAAC,CAACkC,EAAE,GAAG,CAACD,EAAE,GAAGE,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACE,KAAK,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGE,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACI,QAAQ,MAAM,IAAI,IAAIL,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC,CAAC,CAAC;MAC3R,OAAOG,KAAK;IAChB;EAAC;EAAA,OAAApC,iBAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}