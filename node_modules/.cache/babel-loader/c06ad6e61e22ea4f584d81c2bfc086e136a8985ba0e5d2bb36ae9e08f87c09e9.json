{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createForOfIteratorHelper from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { executeOnSingleOrMultiple, itemFromSingleOrMultiple } from \"tsparticles-engine\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nexport var Absorbers = /*#__PURE__*/function () {\n  function Absorbers(container) {\n    var _this = this;\n    _classCallCheck(this, Absorbers);\n    this.container = container;\n    this.array = [];\n    this.absorbers = [];\n    this.interactivityAbsorbers = [];\n    container.getAbsorber = function (idxOrName) {\n      return idxOrName === undefined || typeof idxOrName === \"number\" ? _this.array[idxOrName || 0] : _this.array.find(function (t) {\n        return t.name === idxOrName;\n      });\n    };\n    container.addAbsorber = function (options, position) {\n      return _this.addAbsorber(options, position);\n    };\n  }\n  _createClass(Absorbers, [{\n    key: \"addAbsorber\",\n    value: function addAbsorber(options, position) {\n      var absorber = new AbsorberInstance(this, this.container, options, position);\n      this.array.push(absorber);\n      return absorber;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(context) {\n      var _iterator = _createForOfIteratorHelper(this.array),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var absorber = _step.value;\n          absorber.draw(context);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      var absorberOptions = this.absorbers,\n        modeAbsorbers = this.interactivityAbsorbers;\n      if (mode === \"absorber\") {\n        var absorbersModeOptions = itemFromSingleOrMultiple(modeAbsorbers),\n          absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : itemFromSingleOrMultiple(absorberOptions),\n          aPosition = this.container.interactivity.mouse.clickPosition;\n        this.addAbsorber(absorbersOptions, aPosition);\n      }\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this2 = this;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this.absorbers = this.container.actualOptions.absorbers;\n              this.interactivityAbsorbers = this.container.actualOptions.interactivity.modes.absorbers;\n              executeOnSingleOrMultiple(this.absorbers, function (absorber) {\n                _this2.addAbsorber(absorber);\n              });\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function init() {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n  }, {\n    key: \"particleUpdate\",\n    value: function particleUpdate(particle) {\n      var _iterator2 = _createForOfIteratorHelper(this.array),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var absorber = _step2.value;\n          absorber.attract(particle);\n          if (particle.destroyed) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"removeAbsorber\",\n    value: function removeAbsorber(absorber) {\n      var index = this.array.indexOf(absorber);\n      if (index >= 0) {\n        this.array.splice(index, 1);\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var _iterator3 = _createForOfIteratorHelper(this.array),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var absorber = _step3.value;\n          absorber.resize();\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.array = [];\n    }\n  }]);\n  return Absorbers;\n}();","map":{"version":3,"names":["executeOnSingleOrMultiple","itemFromSingleOrMultiple","AbsorberInstance","Absorbers","container","_this","_classCallCheck","array","absorbers","interactivityAbsorbers","getAbsorber","idxOrName","undefined","find","t","name","addAbsorber","options","position","_createClass","key","value","absorber","push","draw","context","_iterator","_createForOfIteratorHelper","_step","s","n","done","err","e","f","handleClickMode","mode","absorberOptions","modeAbsorbers","absorbersModeOptions","absorbersOptions","aPosition","interactivity","mouse","clickPosition","_init","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this2","wrap","_callee$","_context","prev","next","actualOptions","modes","stop","init","apply","arguments","particleUpdate","particle","_iterator2","_step2","attract","destroyed","removeAbsorber","index","indexOf","splice","resize","_iterator3","_step3"],"sources":["C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/tsparticles-plugin-absorbers/esm/Absorbers.js"],"sourcesContent":["import { executeOnSingleOrMultiple, itemFromSingleOrMultiple } from \"tsparticles-engine\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nexport class Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        container.getAbsorber = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addAbsorber = (options, position) => this.addAbsorber(options, position);\n    }\n    addAbsorber(options, position) {\n        const absorber = new AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            absorber.draw(context);\n        }\n    }\n    handleClickMode(mode) {\n        const absorberOptions = this.absorbers, modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === \"absorber\") {\n            const absorbersModeOptions = itemFromSingleOrMultiple(modeAbsorbers), absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : itemFromSingleOrMultiple(absorberOptions), aPosition = this.container.interactivity.mouse.clickPosition;\n            this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    async init() {\n        this.absorbers = this.container.actualOptions.absorbers;\n        this.interactivityAbsorbers = this.container.actualOptions.interactivity.modes.absorbers;\n        executeOnSingleOrMultiple(this.absorbers, (absorber) => {\n            this.addAbsorber(absorber);\n        });\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n}\n"],"mappings":";;;;;AAAA,SAASA,yBAAyB,EAAEC,wBAAwB,QAAQ,oBAAoB;AACxF,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,WAAaC,SAAS;EAClB,SAAAA,UAAYC,SAAS,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAH,SAAA;IACnB,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACG,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,sBAAsB,GAAG,EAAE;IAChCL,SAAS,CAACM,WAAW,GAAG,UAACC,SAAS;MAAA,OAAKA,SAAS,KAAKC,SAAS,IAAI,OAAOD,SAAS,KAAK,QAAQ,GACzFN,KAAI,CAACE,KAAK,CAACI,SAAS,IAAI,CAAC,CAAC,GAC1BN,KAAI,CAACE,KAAK,CAACM,IAAI,CAAC,UAACC,CAAC;QAAA,OAAKA,CAAC,CAACC,IAAI,KAAKJ,SAAS;MAAA,EAAC;IAAA;IAClDP,SAAS,CAACY,WAAW,GAAG,UAACC,OAAO,EAAEC,QAAQ;MAAA,OAAKb,KAAI,CAACW,WAAW,CAACC,OAAO,EAAEC,QAAQ,CAAC;IAAA;EACtF;EAACC,YAAA,CAAAhB,SAAA;IAAAiB,GAAA;IAAAC,KAAA,EACD,SAAAL,YAAYC,OAAO,EAAEC,QAAQ,EAAE;MAC3B,IAAMI,QAAQ,GAAG,IAAIpB,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAACE,SAAS,EAAEa,OAAO,EAAEC,QAAQ,CAAC;MAC9E,IAAI,CAACX,KAAK,CAACgB,IAAI,CAACD,QAAQ,CAAC;MACzB,OAAOA,QAAQ;IACnB;EAAC;IAAAF,GAAA;IAAAC,KAAA,EACD,SAAAG,KAAKC,OAAO,EAAE;MAAA,IAAAC,SAAA,GAAAC,0BAAA,CACa,IAAI,CAACpB,KAAK;QAAAqB,KAAA;MAAA;QAAjC,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAAmC;UAAA,IAAxBT,QAAQ,GAAAM,KAAA,CAAAP,KAAA;UACfC,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC;QAC1B;MAAC,SAAAO,GAAA;QAAAN,SAAA,CAAAO,CAAA,CAAAD,GAAA;MAAA;QAAAN,SAAA,CAAAQ,CAAA;MAAA;IACL;EAAC;IAAAd,GAAA;IAAAC,KAAA,EACD,SAAAc,gBAAgBC,IAAI,EAAE;MAClB,IAAMC,eAAe,GAAG,IAAI,CAAC7B,SAAS;QAAE8B,aAAa,GAAG,IAAI,CAAC7B,sBAAsB;MACnF,IAAI2B,IAAI,KAAK,UAAU,EAAE;QACrB,IAAMG,oBAAoB,GAAGtC,wBAAwB,CAACqC,aAAa,CAAC;UAAEE,gBAAgB,GAAGD,oBAAoB,KAAK,IAAI,IAAIA,oBAAoB,KAAK,KAAK,CAAC,GAAGA,oBAAoB,GAAGtC,wBAAwB,CAACoC,eAAe,CAAC;UAAEI,SAAS,GAAG,IAAI,CAACrC,SAAS,CAACsC,aAAa,CAACC,KAAK,CAACC,aAAa;QAC1R,IAAI,CAAC5B,WAAW,CAACwB,gBAAgB,EAAEC,SAAS,CAAC;MACjD;IACJ;EAAC;IAAArB,GAAA;IAAAC,KAAA;MAAA,IAAAwB,KAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CACD,SAAAC,QAAA;QAAA,IAAAC,MAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACI,IAAI,CAAC/C,SAAS,GAAG,IAAI,CAACJ,SAAS,CAACoD,aAAa,CAAChD,SAAS;cACvD,IAAI,CAACC,sBAAsB,GAAG,IAAI,CAACL,SAAS,CAACoD,aAAa,CAACd,aAAa,CAACe,KAAK,CAACjD,SAAS;cACxFR,yBAAyB,CAAC,IAAI,CAACQ,SAAS,EAAE,UAACc,QAAQ,EAAK;gBACpD4B,MAAI,CAAClC,WAAW,CAACM,QAAQ,CAAC;cAC9B,CAAC,CAAC;YAAC;YAAA;cAAA,OAAA+B,QAAA,CAAAK,IAAA;UAAA;QAAA,GAAAT,OAAA;MAAA,CACN;MAAA,SAAAU,KAAA;QAAA,OAAAd,KAAA,CAAAe,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAF,IAAA;IAAA;EAAA;IAAAvC,GAAA;IAAAC,KAAA,EACD,SAAAyC,eAAeC,QAAQ,EAAE;MAAA,IAAAC,UAAA,GAAArC,0BAAA,CACE,IAAI,CAACpB,KAAK;QAAA0D,MAAA;MAAA;QAAjC,KAAAD,UAAA,CAAAnC,CAAA,MAAAoC,MAAA,GAAAD,UAAA,CAAAlC,CAAA,IAAAC,IAAA,GAAmC;UAAA,IAAxBT,QAAQ,GAAA2C,MAAA,CAAA5C,KAAA;UACfC,QAAQ,CAAC4C,OAAO,CAACH,QAAQ,CAAC;UAC1B,IAAIA,QAAQ,CAACI,SAAS,EAAE;YACpB;UACJ;QACJ;MAAC,SAAAnC,GAAA;QAAAgC,UAAA,CAAA/B,CAAA,CAAAD,GAAA;MAAA;QAAAgC,UAAA,CAAA9B,CAAA;MAAA;IACL;EAAC;IAAAd,GAAA;IAAAC,KAAA,EACD,SAAA+C,eAAe9C,QAAQ,EAAE;MACrB,IAAM+C,KAAK,GAAG,IAAI,CAAC9D,KAAK,CAAC+D,OAAO,CAAChD,QAAQ,CAAC;MAC1C,IAAI+C,KAAK,IAAI,CAAC,EAAE;QACZ,IAAI,CAAC9D,KAAK,CAACgE,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;MAC/B;IACJ;EAAC;IAAAjD,GAAA;IAAAC,KAAA,EACD,SAAAmD,OAAA,EAAS;MAAA,IAAAC,UAAA,GAAA9C,0BAAA,CACkB,IAAI,CAACpB,KAAK;QAAAmE,MAAA;MAAA;QAAjC,KAAAD,UAAA,CAAA5C,CAAA,MAAA6C,MAAA,GAAAD,UAAA,CAAA3C,CAAA,IAAAC,IAAA,GAAmC;UAAA,IAAxBT,QAAQ,GAAAoD,MAAA,CAAArD,KAAA;UACfC,QAAQ,CAACkD,MAAM,EAAE;QACrB;MAAC,SAAAxC,GAAA;QAAAyC,UAAA,CAAAxC,CAAA,CAAAD,GAAA;MAAA;QAAAyC,UAAA,CAAAvC,CAAA;MAAA;IACL;EAAC;IAAAd,GAAA;IAAAC,KAAA,EACD,SAAAqC,KAAA,EAAO;MACH,IAAI,CAACnD,KAAK,GAAG,EAAE;IACnB;EAAC;EAAA,OAAAJ,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}