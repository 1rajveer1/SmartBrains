{"ast":null,"code":"import _classCallCheck from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { deepExtend } from \"../../../../Utils/Utils\";\nvar charKey = \"character\",\n  charAltKey = \"char\",\n  imageKey = \"image\",\n  imageAltKey = \"images\",\n  polygonKey = \"polygon\",\n  polygonAltKey = \"star\";\nexport var Shape = /*#__PURE__*/function () {\n  function Shape() {\n    _classCallCheck(this, Shape);\n    this.options = {};\n    this.type = \"circle\";\n  }\n  _createClass(Shape, [{\n    key: \"character\",\n    get: function get() {\n      var _a;\n      return (_a = this.options[charKey]) !== null && _a !== void 0 ? _a : this.options[charAltKey];\n    },\n    set: function set(value) {\n      this.options[charAltKey] = this.options[charKey] = value;\n    }\n  }, {\n    key: \"custom\",\n    get: function get() {\n      return this.options;\n    },\n    set: function set(value) {\n      this.options = value;\n    }\n  }, {\n    key: \"image\",\n    get: function get() {\n      var _a;\n      return (_a = this.options[imageKey]) !== null && _a !== void 0 ? _a : this.options[imageAltKey];\n    },\n    set: function set(value) {\n      this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n  }, {\n    key: \"images\",\n    get: function get() {\n      return this.image;\n    },\n    set: function set(value) {\n      this.image = value;\n    }\n  }, {\n    key: \"polygon\",\n    get: function get() {\n      var _a;\n      return (_a = this.options[polygonKey]) !== null && _a !== void 0 ? _a : this.options[polygonAltKey];\n    },\n    set: function set(value) {\n      this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n  }, {\n    key: \"stroke\",\n    get: function get() {\n      return [];\n    },\n    set: function set(_value) {}\n  }, {\n    key: \"load\",\n    value: function load(data) {\n      var _a, _b, _c;\n      if (!data) {\n        return;\n      }\n      var options = (_a = data.options) !== null && _a !== void 0 ? _a : data.custom;\n      if (options !== undefined) {\n        for (var shape in options) {\n          var item = options[shape];\n          if (item) {\n            this.options[shape] = deepExtend((_b = this.options[shape]) !== null && _b !== void 0 ? _b : {}, item);\n          }\n        }\n      }\n      this.loadShape(data.character, charKey, charAltKey, true);\n      this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n      this.loadShape((_c = data.image) !== null && _c !== void 0 ? _c : data.images, imageKey, imageAltKey, true);\n      if (data.type !== undefined) {\n        this.type = data.type;\n      }\n    }\n  }, {\n    key: \"loadShape\",\n    value: function loadShape(item, mainKey, altKey, altOverride) {\n      var _a, _b;\n      if (!item) {\n        return;\n      }\n      var isArray = item instanceof Array;\n      var emptyValue = isArray ? [] : {},\n        mainDifferentValues = isArray !== this.options[mainKey] instanceof Array,\n        altDifferentValues = isArray !== this.options[altKey] instanceof Array;\n      if (mainDifferentValues) {\n        this.options[mainKey] = emptyValue;\n      }\n      if (altDifferentValues && altOverride) {\n        this.options[altKey] = emptyValue;\n      }\n      this.options[mainKey] = deepExtend((_a = this.options[mainKey]) !== null && _a !== void 0 ? _a : emptyValue, item);\n      if (!this.options[altKey] || altOverride) {\n        this.options[altKey] = deepExtend((_b = this.options[altKey]) !== null && _b !== void 0 ? _b : emptyValue, item);\n      }\n    }\n  }]);\n  return Shape;\n}();","map":{"version":3,"names":["deepExtend","charKey","charAltKey","imageKey","imageAltKey","polygonKey","polygonAltKey","Shape","_classCallCheck","options","type","_createClass","key","get","_a","set","value","image","_value","load","data","_b","_c","custom","undefined","shape","item","loadShape","character","polygon","images","mainKey","altKey","altOverride","isArray","Array","emptyValue","mainDifferentValues","altDifferentValues"],"sources":["C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js"],"sourcesContent":["import { deepExtend } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        var _a;\n        return ((_a = this.options[charKey]) !== null && _a !== void 0 ? _a : this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        var _a;\n        return ((_a = this.options[imageKey]) !== null && _a !== void 0 ? _a : this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        var _a;\n        return ((_a = this.options[polygonKey]) !== null && _a !== void 0 ? _a : this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        const options = (_a = data.options) !== null && _a !== void 0 ? _a : data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend((_b = this.options[shape]) !== null && _b !== void 0 ? _b : {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape((_c = data.image) !== null && _c !== void 0 ? _c : data.images, imageKey, imageAltKey, true);\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n    loadShape(item, mainKey, altKey, altOverride) {\n        var _a, _b;\n        if (!item) {\n            return;\n        }\n        const isArray = item instanceof Array;\n        const emptyValue = isArray ? [] : {}, mainDifferentValues = isArray !== this.options[mainKey] instanceof Array, altDifferentValues = isArray !== this.options[altKey] instanceof Array;\n        if (mainDifferentValues) {\n            this.options[mainKey] = emptyValue;\n        }\n        if (altDifferentValues && altOverride) {\n            this.options[altKey] = emptyValue;\n        }\n        this.options[mainKey] = deepExtend((_a = this.options[mainKey]) !== null && _a !== void 0 ? _a : emptyValue, item);\n        if (!this.options[altKey] || altOverride) {\n            this.options[altKey] = deepExtend((_b = this.options[altKey]) !== null && _b !== void 0 ? _b : emptyValue, item);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}