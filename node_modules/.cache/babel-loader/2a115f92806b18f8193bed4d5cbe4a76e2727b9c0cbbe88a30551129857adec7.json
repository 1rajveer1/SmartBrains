{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport var QuadTree = /*#__PURE__*/function () {\n  function QuadTree(rectangle, capacity) {\n    _classCallCheck(this, QuadTree);\n    this.rectangle = rectangle;\n    this.capacity = capacity;\n    this._points = [];\n    this._divided = false;\n  }\n  _createClass(QuadTree, [{\n    key: \"insert\",\n    value: function insert(point) {\n      var _a, _b, _c, _d, _e;\n      if (!this.rectangle.contains(point.position)) {\n        return false;\n      }\n      if (this._points.length < this.capacity) {\n        this._points.push(point);\n        return true;\n      }\n      if (!this._divided) {\n        this.subdivide();\n      }\n      return (_e = ((_a = this._NE) === null || _a === void 0 ? void 0 : _a.insert(point)) || ((_b = this._NW) === null || _b === void 0 ? void 0 : _b.insert(point)) || ((_c = this._SE) === null || _c === void 0 ? void 0 : _c.insert(point)) || ((_d = this._SW) === null || _d === void 0 ? void 0 : _d.insert(point))) !== null && _e !== void 0 ? _e : false;\n    }\n  }, {\n    key: \"query\",\n    value: function query(range, check, found) {\n      var _a, _b, _c, _d;\n      var res = found !== null && found !== void 0 ? found : [];\n      if (!range.intersects(this.rectangle)) {\n        return [];\n      }\n      var _iterator = _createForOfIteratorHelper(this._points),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var p = _step.value;\n          if (!range.contains(p.position) && getDistance(range.position, p.position) > p.particle.getRadius() && (!check || check(p.particle))) {\n            continue;\n          }\n          res.push(p.particle);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      if (this._divided) {\n        (_a = this._NE) === null || _a === void 0 ? void 0 : _a.query(range, check, res);\n        (_b = this._NW) === null || _b === void 0 ? void 0 : _b.query(range, check, res);\n        (_c = this._SE) === null || _c === void 0 ? void 0 : _c.query(range, check, res);\n        (_d = this._SW) === null || _d === void 0 ? void 0 : _d.query(range, check, res);\n      }\n      return res;\n    }\n  }, {\n    key: \"queryCircle\",\n    value: function queryCircle(position, radius, check) {\n      return this.query(new Circle(position.x, position.y, radius), check);\n    }\n  }, {\n    key: \"queryRectangle\",\n    value: function queryRectangle(position, size, check) {\n      return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n  }, {\n    key: \"subdivide\",\n    value: function subdivide() {\n      var x = this.rectangle.position.x,\n        y = this.rectangle.position.y,\n        w = this.rectangle.size.width,\n        h = this.rectangle.size.height,\n        capacity = this.capacity;\n      this._NE = new QuadTree(new Rectangle(x, y, w / 2, h / 2), capacity);\n      this._NW = new QuadTree(new Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n      this._SE = new QuadTree(new Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n      this._SW = new QuadTree(new Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n      this._divided = true;\n    }\n  }]);\n  return QuadTree;\n}();","map":{"version":3,"names":["Circle","Rectangle","getDistance","QuadTree","rectangle","capacity","_classCallCheck","_points","_divided","_createClass","key","value","insert","point","_a","_b","_c","_d","_e","contains","position","length","push","subdivide","_NE","_NW","_SE","_SW","query","range","check","found","res","intersects","_iterator","_createForOfIteratorHelper","_step","s","n","done","p","particle","getRadius","err","e","f","queryCircle","radius","x","y","queryRectangle","size","width","height","w","h"],"sources":["C:/Users/Polymorph/Desktop/face_recognizer/face_recognition_app/SmartBrains/node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js"],"sourcesContent":["import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._points = [];\n        this._divided = false;\n    }\n    insert(point) {\n        var _a, _b, _c, _d, _e;\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this.subdivide();\n        }\n        return ((_e = (((_a = this._NE) === null || _a === void 0 ? void 0 : _a.insert(point)) ||\n            ((_b = this._NW) === null || _b === void 0 ? void 0 : _b.insert(point)) ||\n            ((_c = this._SE) === null || _c === void 0 ? void 0 : _c.insert(point)) ||\n            ((_d = this._SW) === null || _d === void 0 ? void 0 : _d.insert(point)))) !== null && _e !== void 0 ? _e : false);\n    }\n    query(range, check, found) {\n        var _a, _b, _c, _d;\n        const res = found !== null && found !== void 0 ? found : [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            (_a = this._NE) === null || _a === void 0 ? void 0 : _a.query(range, check, res);\n            (_b = this._NW) === null || _b === void 0 ? void 0 : _b.query(range, check, res);\n            (_c = this._SE) === null || _c === void 0 ? void 0 : _c.query(range, check, res);\n            (_d = this._SW) === null || _d === void 0 ? void 0 : _d.query(range, check, res);\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n    subdivide() {\n        const x = this.rectangle.position.x, y = this.rectangle.position.y, w = this.rectangle.size.width, h = this.rectangle.size.height, capacity = this.capacity;\n        this._NE = new QuadTree(new Rectangle(x, y, w / 2, h / 2), capacity);\n        this._NW = new QuadTree(new Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n        this._SE = new QuadTree(new Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n        this._SW = new QuadTree(new Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n        this._divided = true;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}