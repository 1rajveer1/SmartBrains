[{"C:\\Users\\Polymorph\\Desktop\\face_recognizer\\face_recognition_app\\SmartBrains\\src\\index.js":"1","C:\\Users\\Polymorph\\Desktop\\face_recognizer\\face_recognition_app\\SmartBrains\\src\\reportWebVitals.js":"2","C:\\Users\\Polymorph\\Desktop\\face_recognizer\\face_recognition_app\\SmartBrains\\src\\App.js":"3","C:\\Users\\Polymorph\\Desktop\\face_recognizer\\face_recognition_app\\SmartBrains\\src\\componenets\\Logo\\Logo.js":"4","C:\\Users\\Polymorph\\Desktop\\face_recognizer\\face_recognition_app\\SmartBrains\\src\\componenets\\navigation\\Navigation.js":"5","C:\\Users\\Polymorph\\Desktop\\face_recognizer\\face_recognition_app\\SmartBrains\\src\\componenets\\ImageLinkForm\\ImageLinkForm.js":"6","C:\\Users\\Polymorph\\Desktop\\face_recognizer\\face_recognition_app\\SmartBrains\\src\\componenets\\FaceRecognition\\FaceRecognition.js":"7","C:\\Users\\Polymorph\\Desktop\\face_recognizer\\face_recognition_app\\SmartBrains\\src\\componenets\\SignIn\\SignIn.js":"8","C:\\Users\\Polymorph\\Desktop\\face_recognizer\\face_recognition_app\\SmartBrains\\src\\componenets\\Rank\\Rank.js":"9","C:\\Users\\Polymorph\\Desktop\\face_recognizer\\face_recognition_app\\SmartBrains\\src\\componenets\\Register\\Register.js":"10","C:\\Users\\Polymorph\\Desktop\\face_recognizer\\face_recognition_app\\SmartBrains\\src\\componenets\\ParticleComponent\\ParticleComponent.js":"11"},{"size":553,"mtime":1685128962165,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1685128962166,"results":"14","hashOfConfig":"13"},{"size":4979,"mtime":1685128962157,"results":"15","hashOfConfig":"13"},{"size":453,"mtime":1685128962160,"results":"16","hashOfConfig":"13"},{"size":764,"mtime":1685128962164,"results":"17","hashOfConfig":"13"},{"size":707,"mtime":1685128962160,"results":"18","hashOfConfig":"13"},{"size":491,"mtime":1685128962158,"results":"19","hashOfConfig":"13"},{"size":2666,"mtime":1685128962164,"results":"20","hashOfConfig":"13"},{"size":329,"mtime":1685128962163,"results":"21","hashOfConfig":"13"},{"size":2788,"mtime":1685128962163,"results":"22","hashOfConfig":"13"},{"size":2996,"mtime":1685128962162,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13rdq7r",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Polymorph\\Desktop\\face_recognizer\\face_recognition_app\\SmartBrains\\src\\index.js",[],[],"C:\\Users\\Polymorph\\Desktop\\face_recognizer\\face_recognition_app\\SmartBrains\\src\\reportWebVitals.js",[],[],"C:\\Users\\Polymorph\\Desktop\\face_recognizer\\face_recognition_app\\SmartBrains\\src\\App.js",["58","59","60","61"],[],"import './App.css';\nimport React from 'react';\nimport Logo from './componenets/Logo/Logo';\nimport Navigation from './componenets/navigation/Navigation';\nimport FaceRecognition from './componenets/FaceRecognition/FaceRecognition';\nimport ImageLinkForm from './componenets/ImageLinkForm/ImageLinkForm';\nimport SignIn from './componenets/SignIn/SignIn';\nimport Rank from './componenets/Rank/Rank';\nimport Register from './componenets/Register/Register';\nimport Particle from './componenets/ParticleComponent/ParticleComponent';\n\n\nconst clarifySteup = (imageUrl) =>{\n      // Your PAT (Personal Access Token) can be found in the portal under Authentification\n      const PAT = '651d5bf1f1eb4078964573effae6a1a0';\n      // Specify the correct user_id/app_id pairings\n      // Since you're making inferences outside your app's scope\n      const USER_ID = '1rajveer1';       \n      const APP_ID = '1rajveer1';\n      // Change these to whatever model and image URL you want to use\n      const MODEL_ID = 'face-detection';\n      const IMAGE_URL = imageUrl;\n\n      ///////////////////////////////////////////////////////////////////////////////////\n      // YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n      ///////////////////////////////////////////////////////////////////////////////////\n  \n      const raw = JSON.stringify({\n          \"user_app_id\": {\n              \"user_id\": USER_ID,\n              \"app_id\": APP_ID\n          },\n          \"inputs\": [\n              {\n                  \"data\": {\n                      \"image\": {\n                          \"url\": IMAGE_URL\n                      }\n                  }\n              }\n          ]\n      });\n  \n      const requestOptions = {\n          method: 'POST',\n          headers: {\n              'Accept': 'application/json',\n              'Authorization': 'Key ' + PAT\n          },\n          body: raw\n      };\n    return requestOptions;\n}\n\nconst currentState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signIn',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: '0',\n    joined: ''\n  }\n}\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = currentState;\n  };\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n        }\n      }\n    )\n  }\n\n  calculateFaceLocation = (data) =>{\n    const clarifyFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage')\n    const width = Number(image.width)\n    const height = Number(image.height)\n\n    return {\n      leftCol : clarifyFace.left_col * width,\n      topRow: clarifyFace. top_row * height,\n      rightCol: width - (clarifyFace.right_col * width),\n      bottomRow: height - (clarifyFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) =>{\n    console.log(box);\n    this.setState({box: box})\n  }\n\n  onInputChange = (event) =>{\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSumbit = () => {\n    this.setState({imageUrl: this.state.input})\n    console.log('hi',this.state.user)\n    // const url = this.state.input;\n    console.log('yup',this.state)\n    fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", clarifySteup(this.state.input))\n    .then(response => response.json())\n    .then(response => {\n      if(response){\n        fetch('http://localhost:3000/image', {\n        method: 'put',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          id: this.state.user.id\n        })\n      })\n      .then(response => response.json())\n      .then(count => {\n        this.setState(Object.assign(this.state.user,{entries: count}))\n      })\n    }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n  })\n    .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(currentState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n  \n  render (){\n    // const { isSignedIn, imageUrl, route, box } = this.state;\n  return (\n    <div className=\"App\">\n      <Particle />\n      <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange}/>\n      { this.state.route === 'home' ? \n        <div>\n        <Logo />\n        <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n        <ImageLinkForm onInputChange = {this.onInputChange} onButtonSumbit = {this.onButtonSumbit}/>\n        <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl} /> \n      </div>\n        : (\n          this.state.route === 'signIn' ?\n          <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> :\n          <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n        )\n  }\n    </div>\n  );\n}\n}\nexport default App;\n","C:\\Users\\Polymorph\\Desktop\\face_recognizer\\face_recognition_app\\SmartBrains\\src\\componenets\\Logo\\Logo.js",[],[],"C:\\Users\\Polymorph\\Desktop\\face_recognizer\\face_recognition_app\\SmartBrains\\src\\componenets\\navigation\\Navigation.js",[],[],"C:\\Users\\Polymorph\\Desktop\\face_recognizer\\face_recognition_app\\SmartBrains\\src\\componenets\\ImageLinkForm\\ImageLinkForm.js",[],[],"C:\\Users\\Polymorph\\Desktop\\face_recognizer\\face_recognition_app\\SmartBrains\\src\\componenets\\FaceRecognition\\FaceRecognition.js",[],[],"C:\\Users\\Polymorph\\Desktop\\face_recognizer\\face_recognition_app\\SmartBrains\\src\\componenets\\SignIn\\SignIn.js",[],[],"C:\\Users\\Polymorph\\Desktop\\face_recognizer\\face_recognition_app\\SmartBrains\\src\\componenets\\Rank\\Rank.js",[],[],"C:\\Users\\Polymorph\\Desktop\\face_recognizer\\face_recognition_app\\SmartBrains\\src\\componenets\\Register\\Register.js",[],[],"C:\\Users\\Polymorph\\Desktop\\face_recognizer\\face_recognition_app\\SmartBrains\\src\\componenets\\ParticleComponent\\ParticleComponent.js",[],[],{"ruleId":"62","severity":1,"message":"63","line":21,"column":13,"nodeType":"64","messageId":"65","endLine":21,"endColumn":21},{"ruleId":"66","severity":1,"message":"67","line":96,"column":15,"nodeType":"68","messageId":"69","endLine":96,"endColumn":35,"fix":"70"},{"ruleId":"71","severity":1,"message":"72","line":116,"column":49,"nodeType":"73","messageId":"74","endLine":116,"endColumn":50},{"ruleId":"71","severity":1,"message":"72","line":116,"column":68,"nodeType":"73","messageId":"74","endLine":116,"endColumn":69},"no-unused-vars","'MODEL_ID' is assigned a value but never used.","Identifier","unusedVar","no-whitespace-before-property","Unexpected whitespace before property top_row.","MemberExpression","unexpectedWhitespace",{"range":"75","text":"76"},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",[2755,2757],"."]